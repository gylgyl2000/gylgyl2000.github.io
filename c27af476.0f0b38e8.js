(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{178:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(212)),c={id:"Codecademy-Cheatsheets-Learn_JavaScript-04-Scope",title:"Scope"},i={unversionedId:"Codecademy/Codecademy-Cheatsheets-Learn_JavaScript-04-Scope",id:"Codecademy/Codecademy-Cheatsheets-Learn_JavaScript-04-Scope",isDocsHomePage:!1,title:"Scope",description:"Learn JavaScript: Scope Cheatsheet | Codecademy",source:"@site/docs/Codecademy/Codecademy-Cheatsheets-Learn_JavaScript-04-Scope.md",slug:"/Codecademy/Codecademy-Cheatsheets-Learn_JavaScript-04-Scope",permalink:"/docs/Codecademy/Codecademy-Cheatsheets-Learn_JavaScript-04-Scope",editUrl:"https://github.com/gylgyl2000/laloutre.github.io/edit/main/docs/Codecademy/Codecademy-Cheatsheets-Learn_JavaScript-04-Scope.md",version:"current"},l=[{value:"Scope",id:"scope",children:[]},{value:"Block Scoped Variables",id:"block-scoped-variables",children:[]},{value:"Global Variables",id:"global-variables",children:[]}],s={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.mdx)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/learn/introduction-to-javascript/modules/learn-javascript-scope/cheatsheet"}),"Learn JavaScript: Scope Cheatsheet | Codecademy")),Object(o.mdx)("h3",{id:"scope"},"Scope"),Object(o.mdx)("p",null,Object(o.mdx)("em",{parentName:"p"},"Scope")," is a concept that refers to where values and functions can be accessed."),Object(o.mdx)("p",null,"Various scopes include:"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("em",{parentName:"li"},"Global")," scope (a value/function in the global scope can be used anywhere in the entire program)"),Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("em",{parentName:"li"},"File")," or ",Object(o.mdx)("em",{parentName:"li"},"module")," scope (the value/function can only be accessed from within the file)"),Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("em",{parentName:"li"},"Function")," scope (only visible within the function),"),Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("em",{parentName:"li"},"Code block")," scope (only visible within a ",Object(o.mdx)("inlineCode",{parentName:"li"},"{ ... }")," codeblock)")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'function myFunction() {\n    \n    var pizzaName = "Volvo";\n    // Code here can use pizzaName\n\n}\n\n// Code here can\'t use pizzaName\n')),Object(o.mdx)("h3",{id:"block-scoped-variables"},"Block Scoped Variables"),Object(o.mdx)("p",null,Object(o.mdx)("inlineCode",{parentName:"p"},"const")," and ",Object(o.mdx)("inlineCode",{parentName:"p"},"let")," are ",Object(o.mdx)("em",{parentName:"p"},"block scoped")," variables, meaning they are only accessible in their block or nested blocks. In the given code block, trying to print the ",Object(o.mdx)("inlineCode",{parentName:"p"},"statusMessage")," using the ",Object(o.mdx)("inlineCode",{parentName:"p"},"console.log()")," method will result in a ",Object(o.mdx)("inlineCode",{parentName:"p"},"ReferenceError"),". It is accessible only inside that ",Object(o.mdx)("inlineCode",{parentName:"p"},"if")," block."),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const isLoggedIn = true;\n\nif (isLoggedIn == true) {\n    const statusMessage = 'User is logged in.';\n}\n\nconsole.log(statusMessage);\n\n// Uncaught ReferenceError: statusMessage is not defined\n")),Object(o.mdx)("h3",{id:"global-variables"},"Global Variables"),Object(o.mdx)("p",null,"JavaScript variables that are declared outside of blocks or functions can exist in the ",Object(o.mdx)("em",{parentName:"p"},"global scope"),", which means they are accessible throughout a program. Variables declared outside of smaller block or function scopes are accessible inside those smaller scopes."),Object(o.mdx)("p",null,Object(o.mdx)("strong",{parentName:"p"},"Note:")," It is best practice to keep global variables to a minimum."),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// Variable declared globally\nconst color = 'blue';\n\nfunction printColor() {\n    console.log(color);\n}\n\nprintColor(); // Prints: blue\n")))}p.isMDXComponent=!0},212:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return p})),n.d(t,"MDXProvider",(function(){return u})),n.d(t,"mdx",(function(){return h})),n.d(t,"useMDXComponents",(function(){return m})),n.d(t,"withMDXComponents",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),d=function(e){return function(t){var n=m(t.components);return r.a.createElement(e,c({},t,{components:n}))}},m=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=m(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},f=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=m(n),d=a,u=p["".concat(c,".").concat(d)]||p[d]||b[d]||o;return n?r.a.createElement(u,l(l({ref:t},i),{},{components:n})):r.a.createElement(u,l({ref:t},i))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);