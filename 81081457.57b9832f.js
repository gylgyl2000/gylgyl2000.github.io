(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{135:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),s=(n(0),n(214)),o={id:"codewars-katas",title:"Codewars Katas"},l={unversionedId:"Codewars/codewars-katas",id:"Codewars/codewars-katas",isDocsHomePage:!1,title:"Codewars Katas",description:"Multiply",source:"@site/docs/Codewars/02-10-01-codewars-katas.md",slug:"/Codewars/codewars-katas",permalink:"/docs/Codewars/codewars-katas",editUrl:"https://github.com/gylgyl2000/laloutre.github.io/edit/main/docs/Codewars/02-10-01-codewars-katas.md",version:"current"},c=[{value:"Multiply",id:"multiply",children:[]},{value:"Even or Odd",id:"even-or-odd",children:[]},{value:"Opposite number",id:"opposite-number",children:[]},{value:"String repeat",id:"string-repeat",children:[]},{value:"<strong>Jenny&#39;s secret message</strong>",id:"jennys-secret-message",children:[]},{value:"Convert boolean values to strings &#39;Yes&#39; or &#39;No&#39;",id:"convert-boolean-values-to-strings-yes-or-no",children:[]},{value:"<strong>Remove First and Last Character</strong>",id:"remove-first-and-last-character",children:[]},{value:"Vowel Count",id:"vowel-count",children:[]},{value:"Get the Middle Character",id:"get-the-middle-character",children:[]},{value:"Jaden Casing Strings",id:"jaden-casing-strings",children:[]},{value:"Mumbling",id:"mumbling",children:[]},{value:"Is n divisible by x and y ?",id:"is-n-divisible-by-x-and-y-",children:[]}],i={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.mdx)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(s.mdx)("h2",{id:"multiply"},"Multiply"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions :")," The code does not execute properly. Try to figure out why."),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function multiply(a, b){\n  a * b\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Test Driven Development (TDD)")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"Test.assertEquals(multiply(1,1), 1);\nTest.assertEquals(multiply(2,1), 2);\nTest.assertEquals(multiply(2,2), 4);\nTest.assertEquals(multiply(3,5), 15);\n\nTest.describe('Some random tests', function() {\n  for(let i=0; i<100; i++) {\n    let [a,b] = [r()*100|0, r()*100|0];\n    Test.assertEquals(multiply(a,b), a*b);\n  }\n})\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function multiply(a, b) {\n  return a * b;\n}\n\n//////////\n\nmultiply = (a, b) => a * b;\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"even-or-odd"},"Even or Odd"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions :"),' Create a function (or write a script in Shell) that takes an integer as  an argument and returns "Even" for even numbers or "Odd" for odd  numbers.'),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function even_or_odd(number) {\n  // ...\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample Tests :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'Test.assertEquals(even_or_odd(2), "Even")\nTest.assertEquals(even_or_odd(0), "Even")\nTest.assertEquals(even_or_odd(7), "Odd")\nTest.assertEquals(even_or_odd(1), "Odd")\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'function even_or_odd(number) {\n  number = parseInt(number);\n  return ((number & 1) == \'0\')?"Even":"Odd";\n}\n')),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"opposite-number"},"Opposite number"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions :")," very simple, given a number, find its opposite."),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Examples :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-markdown"}),"1: -1\n14: -14\n-34: 34\n")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function opposite(number) {\n  //your code here\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample tests :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"Test.assertEquals(opposite(1), -1,)\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function opposite(number) {\n  return -number\n}\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"string-repeat"},"String repeat"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions :")," Write a function called ",Object(s.mdx)("inlineCode",{parentName:"p"},"repeatString")," which repeats the given String ",Object(s.mdx)("inlineCode",{parentName:"p"},"src")," exactly ",Object(s.mdx)("inlineCode",{parentName:"p"},"count")," times."),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'repeatStr(6, "I") // "IIIIII"\nrepeatStr(5, "Hello") // "HelloHelloHelloHelloHello"\n')),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function repeatStr (n, s) {\n  return '';\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample Tests :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'describe("Tests", function() {\n  it ("Basic tests", function() {\n    Test.assertSimilar(repeatStr(3, "*"), "***");\n    Test.assertSimilar(repeatStr(5, "#"), "#####");\n    Test.assertSimilar(repeatStr(2, "ha "), "ha ha ");\n  });\n});\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function repeatStr (n, s) {\n  return s.repeat(n);\n}\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"jennys-secret-message"},Object(s.mdx)("strong",{parentName:"h2"},"Jenny's secret message")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions :")," Jenny has written a function that returns a greeting for a user. However, she's in love with Johnny,  and would like to greet him slightly different. She added a special case to her function, but she made a mistake."),Object(s.mdx)("p",null,"Can you help her ?"),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Jenny a \xe9crit une fonction qui renvoie un message d'accueil pour un  utilisateur. Cependant, elle est amoureuse de Johnny et aimerait le  saluer l\xe9g\xe8rement diff\xe9remment. Elle a ajout\xe9 un cas particulier \xe0 sa  fonction, mais elle a fait une erreur."),Object(s.mdx)("p",{parentName:"blockquote"},"Peux-tu l'aider ?")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'function greet(name){\n  return "Hello, " + name + "!";\n  if(name === "Johnny")\n    return "Hello, my love!";\n}\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample Tests :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'Test.describe("Jenny\'s greeting function", function(){\n  Test.it("should greet some people normally",function(){\n    Test.assertEquals(greet("Jim"), "Hello, Jim!");\n    Test.assertEquals(greet("Jane"), "Hello, Jane!");\n    Test.assertEquals(greet("Simon"), "Hello, Simon!");\n  });\n  Test.it("should greet Johnny a little bit more special",function(){\n    Test.assertEquals(greet("Johnny"), "Hello, my love!");\n  });\n});\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'function greet(name){\n  if(name === "Johnny")\n    return "Hello, my love!";\n  else\n    return "Hello, " + name + "!";\n}\n')),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"convert-boolean-values-to-strings-yes-or-no"},"Convert boolean values to strings 'Yes' or 'No'"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions :")," Complete the method that takes a boolean value and return a ",Object(s.mdx)("inlineCode",{parentName:"p"},'"Yes"')," string for ",Object(s.mdx)("inlineCode",{parentName:"p"},"true"),", or a ",Object(s.mdx)("inlineCode",{parentName:"p"},'"No"')," string for ",Object(s.mdx)("inlineCode",{parentName:"p"},"false"),"."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Compl\xe9tez la m\xe9thode qui prend une valeur bool\xe9enne et retournez une cha\xeene ",Object(s.mdx)("inlineCode",{parentName:"p"},'"Yes"')," pour ",Object(s.mdx)("inlineCode",{parentName:"p"},"true"),' ou une cha\xeene "No"',Object(s.mdx)("inlineCode",{parentName:"p"},"pour"),"false`.")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function boolToWord( bool ){\n  //...\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Samples Tests :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"Test.assertEquals(boolToWord(true), 'Yes')\nTest.assertEquals(boolToWord(false), 'No')\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution :")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function boolToWord( bool ){\n  if(bool == true)\n    return 'Yes';\n  if(bool == false)\n    return 'No';\n}\n\n//////////\n\nfunction boolToWord( bool ){\n  if (bool) {\n    return 'Yes';\n  } else {\n    return 'No';\n  }\n}\n\n//////////\n\nfunction boolToWord( bool ){\n  if( bool ){\n    return \"Yes\";\n  }\n  return \"No\";\n}\n\n//////////\n\nfunction boolToWord( bool ){\n  return bool ? 'Yes':'No';\n}\n\n//////////\n\nconst boolToWord = bool => bool ? 'Yes' : 'No';\n\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"remove-first-and-last-character"},Object(s.mdx)("strong",{parentName:"h2"},"Remove First and Last Character")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions")),Object(s.mdx)("p",null,"It's pretty straightforward. Your goal is to create a function that  removes the first and last characters of a string. You're given one  parameter, the original string.  You don't have to worry with strings  with less than two characters."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"C'est assez simple. Votre objectif est de cr\xe9er une fonction qui  supprime les premier et dernier caract\xe8res d'une cha\xeene. Vous obtenez un param\xe8tre, la cha\xeene d'origine. Vous n'avez pas \xe0 vous soucier des  cha\xeenes de moins de deux caract\xe8res.")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function removeChar(str){\n //You got this!\n\n};\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample Tests")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"Test.describe(\"Tests\", function(){\n\nTest.assertEquals(removeChar('eloquent'), 'loquen');\nTest.assertEquals(removeChar('country'), 'ountr');\nTest.assertEquals(removeChar('person'), 'erso');\nTest.assertEquals(removeChar('place'), 'lac');\n\n});\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function removeChar(str){\n return str.substring(1, str.length-1);\n\n};\n//////////\nfunction removeChar(str) {\n  return str.slice(1, -1);\n}\n//////////\nconst removeChar = str => str.slice(1,-1);\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"vowel-count"},"Vowel Count"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions")),Object(s.mdx)("p",null,"Return the number (count) of vowels in the given string."),Object(s.mdx)("p",null,"We will consider a, e, i, o, and u as vowels for this Kata."),Object(s.mdx)("p",null,"The input string will only consist of lower case letters and/or spaces."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Renvoie le nombre (count) de voyelles dans la cha\xeene donn\xe9e."),Object(s.mdx)("p",{parentName:"blockquote"},"Nous consid\xe9rerons a, e, i, o et u comme voyelles pour ce Kata."),Object(s.mdx)("p",{parentName:"blockquote"},"La cha\xeene d'entr\xe9e sera uniquement compos\xe9e de lettres minuscules et / ou d'espaces.")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function getCount(str) {\n  var vowelsCount = 0;\n\n  // enter your majic here\n\n  return vowelsCount;\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample tests")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'describe("Case 1", function(){\n    it ("should be defined", function(){\n        Test.assertEquals(getCount("abracadabra"), 5)\n    });\n});\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function getCount(str) {\n  var vowelsCount = 0;\n  for(let i = 0; i < str.length; i++) {\n    if(str.charAt(i)==='a' || str.charAt(i)==='e' || str.charAt(i)==='i' || str.charAt(i)==='o' || str.charAt(i)==='u'){\n      vowelsCount +=1;\n  }\n  }\n  return vowelsCount;\n}\n\n//////////\n\nfunction getCount(str) {\n  return (str.match(/[aeiou]/ig)||[]).length;\n}\n\n//////////\n\nfunction getCount(str) {\n  return (str.match(/[aeiou]/g) || []).length\n}\n\n//////////\n\nfunction getCount(str) {\n  return str.replace(/[^aeiou]/gi, '').length;\n}\n\n//////////\n\nfunction getCount(str) {\n return str.split('').filter(c => \"aeiouAEIOU\".includes(c)).length;\n}\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"get-the-middle-character"},"Get the Middle Character"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions")),Object(s.mdx)("p",null,"You are going to be given a word. Your job is to return the middle character of the word. If the word's length is odd, return the middle character. If the word's length is even, return the middle 2 characters."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Vous allez recevoir un mot. Votre travail consiste \xe0 renvoyer le caract\xe8re  central du mot. Si la longueur du mot est impaire, renvoyez le caract\xe8re du milieu. Si la longueur du mot est paire, renvoyez les 2 caract\xe8res  du milieu.")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Examples")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),' Kata.getMiddle("test") should return "es"\n\n Kata.getMiddle("testing") should return "t"\n\n Kata.getMiddle("middle") should return "dd"\n\n Kata.getMiddle("A") should return "A"\n')),Object(s.mdx)("p",null,"#Input"),Object(s.mdx)("p",null,"A word (string) of length ",Object(s.mdx)("inlineCode",{parentName:"p"},"0 < str < 1000")," (In javascript you may get slightly more than 1000 in some test cases due to an error in the test cases). You do not need to test for this. This is only here to tell you that you do not need to worry about your solution timing out."),Object(s.mdx)("p",null,"#Output"),Object(s.mdx)("p",null,"The middle character(s) of the word represented as a string."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"}," #Contribution"),Object(s.mdx)("p",{parentName:"blockquote"},"Un mot (cha\xeene) de longueur ",Object(s.mdx)("inlineCode",{parentName:"p"},"0 < str < 1000")," (En javascript, vous pouvez obtenir un peu plus de 1000 dans certains cas de test en raison d'une erreur  dans les cas de test). Vous n'avez pas besoin de tester cela. Ceci est  uniquement l\xe0 pour vous dire que vous n'avez pas \xe0 vous soucier de  l'expiration de votre solution."),Object(s.mdx)("p",{parentName:"blockquote"},"#","Production"),Object(s.mdx)("p",{parentName:"blockquote"},"Le ou les caract\xe8res du milieu du mot repr\xe9sent\xe9s sous forme de cha\xeene.")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function getMiddle(s)\n{\n  //Code goes here!\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample tests")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'Test.describe("GetMiddle", function() {\n  Test.it("Tests", function() {\n    Test.assertEquals(getMiddle("test"),"es");\n    Test.assertEquals(getMiddle("testing"),"t");\n    Test.assertEquals(getMiddle("middle"),"dd");\n    Test.assertEquals(getMiddle("A"),"A");\n  });\n});\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function getMiddle(s)\n{\n  if(s.length % 2 === 0){\n    return s.charAt((s.length / 2) - 1) + s.charAt(s.length / 2);\n  } else {\n    return s.charAt(s.length / 2);\n  }\n}\n\n//////////\n\nfunction getMiddle(s)\n{\n  return s.substr(Math.ceil(s.length / 2 - 1), s.length % 2 === 0 ? 2 : 1);\n}\n\n//////////\n\nfunction getMiddle(s) {\n  var middle = s.length / 2;\n  return (s.length % 2) \n    ? s.charAt(Math.floor(middle))\n    : s.slice(middle - 1, middle + 1);\n}\n\n//////////\n\nfunction getMiddle(s)\n{\n  return s.slice((s.length-1)/2, s.length/2+1);\n}\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"jaden-casing-strings"},"Jaden Casing Strings"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions")),Object(s.mdx)("p",null,"Jaden Smith, the son of Will Smith, is the star of films such as The Karate Kid (2010) and After Earth (2013). Jaden is also known for ",Object(s.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://twitter.com/jaden"}),"some of his philosophy that he delivers via Twitter"),". When writing on Twitter, he is known for almost always capitalizing every word. For simplicity, you'll have to capitalize each word, check out how contractions are expected to be in the example below."),Object(s.mdx)("p",null,"Your task is to convert strings to how they would be written by Jaden Smith. The strings are actual quotes from Jaden Smith, but they are not capitalized in the same way he originally typed them."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Jaden Smith, le fils de Will Smith, est la star de films tels que The  Karate Kid (2010) et After Earth (2013). Jaden est \xe9galement connu pour  une partie de sa philosophie qu'il livre via Twitter. Lorsqu'il \xe9crit  sur Twitter, il est connu pour capitaliser presque toujours chaque mot.  Pour plus de simplicit\xe9, vous devrez mettre en majuscule chaque mot,  v\xe9rifiez comment les contractions devraient \xeatre dans l'exemple  ci-dessous."),Object(s.mdx)("p",{parentName:"blockquote"},"Votre t\xe2che consiste \xe0 convertir les cha\xeenes comme  elles seraient \xe9crites par Jaden Smith. Les cha\xeenes sont des citations  r\xe9elles de Jaden Smith, mais elles ne sont pas capitalis\xe9es de la m\xeame  mani\xe8re qu'il les a tap\xe9es \xe0 l'origine.")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Example")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),' Not Jaden-Cased: "How can mirrors be real if our eyes aren\'t real"\n Jaden-Cased:     "How Can Mirrors Be Real If Our Eyes Aren\'t Real"\n')),Object(s.mdx)("p",null,Object(s.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://web.archive.org/web/20190624190255/https://twitter.com/officialjaden"}),"Link to Jaden's former Twitter account @officialjaden via archive.org")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"String.prototype.toJadenCase = function () {\n  //...\n};\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample tests")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'var str = "How can mirrors be real if our eyes aren\'t real";\nTest.assertEquals(str.toJadenCase(), "How Can Mirrors Be Real If Our Eyes Aren\'t Real");\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"String.prototype.toJadenCase = function () {\n\nlet strArr = this.split(\" \");\nlet newArr = [];\n\n  for(let i = 0 ; i < strArr.length ; i++ ){\n\n    let FirstLetter = strArr[i].charAt(0).toUpperCase();\n    let restOfWord = strArr[i].slice(1);\n    \n    newArr[i] = FirstLetter + restOfWord;\n\n  };\n\n  return newArr.join(' ');\n\n};\n\n//////////\n\nString.prototype.toJadenCase = function () { \n  return this.split(\" \").map(function(word){\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join(\" \");\n}\n\n//////////\n\n  function capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return this.split(' ').map(capitalizeFirstLetter).join(' ');\n};\n\n//////////\n\nString.prototype.toJadenCase = function() {\n  return this.split(' ').map(item => item[0].toUpperCase() + item.slice(1)).join(' ')\n};\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"mumbling"},"Mumbling"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions")),Object(s.mdx)("p",null,"This time no story, no theory. The examples below show you how to write function ",Object(s.mdx)("inlineCode",{parentName:"p"},"accum")," :"),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Cette fois, pas d'histoire, pas de th\xe9orie. Les exemples ci-dessous vous montrent comment \xe9crire la fonction ",Object(s.mdx)("inlineCode",{parentName:"p"},"accum")," :")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Examples")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),' accum("abcd") -> "A-Bb-Ccc-Dddd"\n accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"\n accum("cwAt") -> "C-Ww-Aaa-Tttt"\n\n\n')),Object(s.mdx)("p",null,"The parameter of accum is a string which includes only letters from ",Object(s.mdx)("inlineCode",{parentName:"p"},"a..z")," and ",Object(s.mdx)("inlineCode",{parentName:"p"},"A..Z"),"."),Object(s.mdx)("blockquote",null,Object(s.mdx)("p",{parentName:"blockquote"},"Le param\xe8tre de accum est une cha\xeene qui ne comprend que des lettres de ",Object(s.mdx)("inlineCode",{parentName:"p"},"a..z")," et ",Object(s.mdx)("inlineCode",{parentName:"p"},"A..Z"),".")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Code de d\xe9part")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function accum(s) {\n    // your code\n}\n")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample tests")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'Test.describe("accum",function() {\nTest.it("Basic tests",function() {    \n    Test.assertEquals(accum("ZpglnRxqenU"), "Z-Pp-Ggg-Llll-Nnnnn-Rrrrrr-Xxxxxxx-Qqqqqqqq-Eeeeeeeee-Nnnnnnnnnn-Uuuuuuuuuuu");\n    Test.assertEquals(accum("NyffsGeyylB"), "N-Yy-Fff-Ffff-Sssss-Gggggg-Eeeeeee-Yyyyyyyy-Yyyyyyyyy-Llllllllll-Bbbbbbbbbbb");\n    Test.assertEquals(accum("MjtkuBovqrU"), "M-Jj-Ttt-Kkkk-Uuuuu-Bbbbbb-Ooooooo-Vvvvvvvv-Qqqqqqqqq-Rrrrrrrrrr-Uuuuuuuuuuu");\n    Test.assertEquals(accum("EvidjUnokmM"), "E-Vv-Iii-Dddd-Jjjjj-Uuuuuu-Nnnnnnn-Oooooooo-Kkkkkkkkk-Mmmmmmmmmm-Mmmmmmmmmmm");\n    Test.assertEquals(accum("HbideVbxncC"), "H-Bb-Iii-Dddd-Eeeee-Vvvvvv-Bbbbbbb-Xxxxxxxx-Nnnnnnnnn-Cccccccccc-Ccccccccccc");\n})})\n')),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"function accum(s) {\n    let strArr = s.split('');\n    let newArr = [];\n\n        for(i = 0 ; i < strArr.length ; i++) {\n        let upperLetter = strArr[i].toUpperCase();\n        let lowerLetter = strArr[i].toLowerCase();\n        newArr[i] = upperLetter + lowerLetter.repeat(i);\n        };\n    return newArr.join('-');\n};\n\n//////////\n\nfunction accum(s) {\n  return s.split('').map((c, i) => (c.toUpperCase() + c.toLowerCase().repeat(i))).join('-');\n}\n\n//////////\n\nfunction accum(s) {\n  return s.split('').map((x,index) => x.toUpperCase()+Array(index+1).join(x.toLowerCase())).join('-');\n}\n\n//////////\n\nfunction accum (s) {\n  return [...s].map((element, index) => {\n    return element.toUpperCase() + element.toLowerCase().repeat(index);\n  }).join('-');\n}\n")),Object(s.mdx)("hr",null),Object(s.mdx)("h2",{id:"is-n-divisible-by-x-and-y-"},"Is n divisible by x and y ?"),Object(s.mdx)("p",null,Object(s.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.codewars.com/kata/5545f109004975ea66000086/train/javascript"}),"Train: Is n divisible by x and y? | Codewars")),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Instructions"),"\nCreate a function that checks if a number ",Object(s.mdx)("inlineCode",{parentName:"p"},"n")," is divisible by two numbers ",Object(s.mdx)("inlineCode",{parentName:"p"},"x")," ",Object(s.mdx)("strong",{parentName:"p"},"AND")," ",Object(s.mdx)("inlineCode",{parentName:"p"},"y"),". All inputs are positive, non-zero digits."),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Examples"),"\n1) n =   3, x = 1, y = 3 =>  true because   3 is divisible by 1 and 3\n2) n =  12, x = 2, y = 6 =>  true because  12 is divisible by 2 and 6\n3) n = 100, x = 5, y = 3 => false because 100 is not divisible by 3\n4) n =  12, x = 7, y = 5 => false because  12 is neither divisible by 7 nor 5"),Object(s.mdx)("p",null,Object(s.mdx)("strong",{parentName:"p"},"Sample Tests")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Test.assertSimilar(isDivisible(3,3,4),false);\nTest.assertSimilar(isDivisible(12,3,4),true);\nTest.assertSimilar(isDivisible(8,3,4),false);\nTest.assertSimilar(isDivisible(48,3,4),true);\n")),Object(s.mdx)("p",null," ",Object(s.mdx)("strong",{parentName:"p"},"Solution")),Object(s.mdx)("pre",null,Object(s.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function isDivisible(n, x, y) {\n  if (n%x===0 && n%y===0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n//////////\nreturn n % x === 0 && n % y === 0;\n//////////\nreturn (n % x === 0 && n % y === 0) ? true : false;\n")))}u.isMDXComponent=!0},214:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return u})),n.d(t,"MDXProvider",(function(){return p})),n.d(t,"mdx",(function(){return O})),n.d(t,"useMDXComponents",(function(){return d})),n.d(t,"withMDXComponents",(function(){return m}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),m=function(e){return function(t){var n=d(t.components);return a.a.createElement(e,o({},t,{components:n}))}},d=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},j=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,p=u["".concat(o,".").concat(m)]||u[m]||b[m]||s;return n?a.a.createElement(p,c(c({ref:t},l),{},{components:n})):a.a.createElement(p,c({ref:t},l))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=j;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var i=2;i<s;i++)o[i]=n[i];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"}}]);