(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{214:function(e,n,t){"use strict";t.r(n),t.d(n,"MDXContext",(function(){return m})),t.d(n,"MDXProvider",(function(){return u})),t.d(n,"mdx",(function(){return x})),t.d(n,"useMDXComponents",(function(){return p})),t.d(n,"withMDXComponents",(function(){return s}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=a.a.createContext({}),s=function(e){return function(n){var t=p(n.components);return a.a.createElement(e,i({},n,{components:t}))}},p=function(e){var n=a.a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},u=function(e){var n=p(e.components);return a.a.createElement(m.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},g=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(t),s=r,u=m["".concat(i,".").concat(s)]||m[s]||b[s]||o;return t?a.a.createElement(u,d(d({ref:n},l),{},{components:t})):a.a.createElement(u,d({ref:n},l))}));function x(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},80:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return m}));var r=t(3),a=t(7),o=(t(0),t(214)),i={id:"freeCodeCamp-Basic_Algorithm_Scripting-fr",title:"Script d'algorithme de base"},l={unversionedId:"freeCodeCamp/freeCodeCamp-Basic_Algorithm_Scripting-fr",id:"freeCodeCamp/freeCodeCamp-Basic_Algorithm_Scripting-fr",isDocsHomePage:!1,title:"Script d'algorithme de base",description:"Introduction aux scripts d'algorithmes de base",source:"@site/docs/freeCodeCamp/freeCodeCamp-Basic_Algorithm_Scripting-fr.md",slug:"/freeCodeCamp/freeCodeCamp-Basic_Algorithm_Scripting-fr",permalink:"/docs/freeCodeCamp/freeCodeCamp-Basic_Algorithm_Scripting-fr",editUrl:"https://github.com/gylgyl2000/laloutre.github.io/edit/main/docs/freeCodeCamp/freeCodeCamp-Basic_Algorithm_Scripting-fr.md",version:"current",sidebar:"docs",previous:{title:"Structures de donn\xe9es de base",permalink:"/docs/freeCodeCamp/freeCodeCamp-Basic_Data_Structures-fr"},next:{title:"Programmation orient\xe9e objet",permalink:"/docs/freeCodeCamp/freeCodeCamp-Object_Oriented_Programming-fr"}},d=[{value:"Introduction aux scripts d&#39;algorithmes de base",id:"introduction-aux-scripts-dalgorithmes-de-base",children:[]},{value:"1. Convertir Celsius en Fahrenheit",id:"1-convertir-celsius-en-fahrenheit",children:[]},{value:"2. Inverser une cha\xeene",id:"2-inverser-une-cha\xeene",children:[]},{value:"3. Factorialiser un nombre",id:"3-factorialiser-un-nombre",children:[]},{value:"4. Rechercher le mot le plus long d&#39;une cha\xeene",id:"4-rechercher-le-mot-le-plus-long-dune-cha\xeene",children:[]},{value:"5. Renvoyer les plus grands nombres dans les tableaux",id:"5-renvoyer-les-plus-grands-nombres-dans-les-tableaux",children:[]},{value:"6. Confirmer la fin",id:"6-confirmer-la-fin",children:[]},{value:"7. R\xe9p\xe9ter une cha\xeene R\xe9p\xe9ter une cha\xeene",id:"7-r\xe9p\xe9ter-une-cha\xeene-r\xe9p\xe9ter-une-cha\xeene",children:[]},{value:"8. Tronquer une cha\xeene",id:"8-tronquer-une-cha\xeene",children:[]},{value:"9. Qui trouve garde",id:"9-qui-trouve-garde",children:[]},{value:"10. Boo qui",id:"10-boo-qui",children:[]},{value:"11. Titrer une phrase",id:"11-titrer-une-phrase",children:[]},{value:"12. Trancher et \xe9pisser",id:"12-trancher-et-\xe9pisser",children:[]},{value:"13. Videur de faux",id:"13-videur-de-faux",children:[]},{value:"14. O\xf9 est-ce que j&#39;appartiens",id:"14-o\xf9-est-ce-que-jappartiens",children:[]},{value:"15. Mutations",id:"15-mutations",children:[]},{value:"16. Chunky Monkey",id:"16-chunky-monkey",children:[]}],c={rightToc:d};function m(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.mdx)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.mdx)("h2",{id:"introduction-aux-scripts-dalgorithmes-de-base"},"Introduction aux scripts d'algorithmes de base"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/"}),"Basic Algorithm Scripting | freeCodeCamp.org")),Object(o.mdx)("p",null,"Un algorithme informatique est une s\xe9quence d'\xe9tapes qui est suivie pour  atteindre un r\xe9sultat particulier. Pour \xe9crire un algorithme, vous devez d'abord comprendre un probl\xe8me, puis le r\xe9soudre avec du codage."),Object(o.mdx)("p",null,"Pour faciliter la r\xe9solution des probl\xe8mes, il peut \xeatre utile de les  d\xe9composer en plusieurs morceaux. Ensuite, chaque morceau peut \xeatre  r\xe9solu un par un. Par exemple, si vous construisez une calculatrice,  n'essayez pas de r\xe9soudre le probl\xe8me dans son ensemble. Tout d'abord,  consid\xe9rez comment obtenir des intrants. Ensuite, d\xe9terminez chaque  op\xe9ration arithm\xe9tique une par une. Enfin, affichez les r\xe9sultats."),Object(o.mdx)("p",null,"Dans cette section, nous allons apprendre \xe0 r\xe9soudre des probl\xe8mes  d'algorithme de base \xe0 l'aide de JavaScript. Cela vous aidera \xe0  am\xe9liorer vos comp\xe9tences en r\xe9solution de probl\xe8mes et \xe0 vous pr\xe9parer \xe0 r\xe9soudre ult\xe9rieurement des probl\xe8mes plus complexes."),Object(o.mdx)("p",null,Object(o.mdx)("strong",{parentName:"p"},"Astuce :")," si vous \xeates bloqu\xe9, essayez d'utiliser ",Object(o.mdx)("inlineCode",{parentName:"p"},"console.log()")," pour enregistrer  les valeurs des variables dans la console. Cela aidera \xe0 d\xe9boguer les  probl\xe8mes."),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"1-convertir-celsius-en-fahrenheit"},"1. Convertir Celsius en Fahrenheit"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/convert-celsius-to-fahrenheit"}),"Learn Basic Algorithm Scripting: Convert Celsius to Fahrenheit | freeCodeCamp.org")),Object(o.mdx)("p",null,"L'algorithme pour convertir de Celsius en Fahrenheit est la temp\xe9rature en Celsius fois ",Object(o.mdx)("inlineCode",{parentName:"p"},"9/5"),", plus ",Object(o.mdx)("inlineCode",{parentName:"p"},"32"),"."),Object(o.mdx)("hr",null),Object(o.mdx)("p",null,"On vous donne une variable ",Object(o.mdx)("inlineCode",{parentName:"p"},"celsius")," repr\xe9sentant une temp\xe9rature en  Celsius. Utilisez la variable ",Object(o.mdx)("inlineCode",{parentName:"p"},"fahrenheit")," d\xe9j\xe0 d\xe9finie et attribuez-lui  la temp\xe9rature Fahrenheit \xe9quivalente \xe0 la temp\xe9rature Celsius donn\xe9e.  Utilisez l'algorithme mentionn\xe9 ci-dessus pour convertir la temp\xe9rature  Celsius en Fahrenheit."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"convertToF(0)")," doit renvoyer un nombre\n",Object(o.mdx)("inlineCode",{parentName:"p"},"convertToF(-30)")," doit renvoyer une valeur de ",Object(o.mdx)("inlineCode",{parentName:"p"},"-22"),"\n",Object(o.mdx)("inlineCode",{parentName:"p"},"convertToF(-10)")," doit renvoyer une valeur de ",Object(o.mdx)("inlineCode",{parentName:"p"},"14"),"\n",Object(o.mdx)("inlineCode",{parentName:"p"},"convertToF(0)")," doit renvoyer une valeur de ",Object(o.mdx)("inlineCode",{parentName:"p"},"32"),"\n",Object(o.mdx)("inlineCode",{parentName:"p"},"convertToF(20)")," doit renvoyer une valeur de ",Object(o.mdx)("inlineCode",{parentName:"p"},"68"),"\n",Object(o.mdx)("inlineCode",{parentName:"p"},"convertToF(30)")," doit renvoyer une valeur de ",Object(o.mdx)("inlineCode",{parentName:"p"},"86"))),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function convertToF(celsius) {\n  let fahrenheit = celsius * (9 / 5) + 32;\n  return fahrenheit;\n}\nconvertToF(30);\n\nconsole.log(convertToF(-30)); // -22\nconsole.log(convertToF(-10)); // 14\nconsole.log(convertToF(0)); // 32\nconsole.log(convertToF(20)); // 68\nconsole.log(convertToF(30)); // 86\n")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"2-inverser-une-cha\xeene"},"2. Inverser une cha\xeene"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/reverse-a-string"}),"Learn Basic Algorithm Scripting: Reverse a String | freeCodeCamp.org")),Object(o.mdx)("p",null,"Inversez la cha\xeene fournie.\nVous devrez peut-\xeatre transformer la cha\xeene en tableau avant de pouvoir l'inverser.\nVotre r\xe9sultat doit \xeatre une cha\xeene."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"reverseString('hello')")," doit renvoyer une cha\xeene.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"reverseString('hello')")," devrait devenir ",Object(o.mdx)("inlineCode",{parentName:"p"},"'olleh'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"reverseString('Howdy')")," doit devenir ",Object(o.mdx)("inlineCode",{parentName:"p"},"'ydwoH'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"reverseString('Greetings from Earth')")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'htraE morf sgniteerG'"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function reverseString(str) {\n  let arr = [];\n  let newStr = "";\n  for (let i = 0; i < str.length; i++) {\n    arr.unshift(str[i]);\n  }\n  for (let j = 0; j < (str.length); j++) {\n    newStr = arr.pop() + newStr;\n  }\n  return newStr;\n}\nconsole.log(reverseString("hello")); // olleh\nconsole.log(reverseString("Howdy")); // ydwoH\nconsole.log(reverseString("Greetings from Earth")); // htraE morf sgniteerG\n')),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"3-factorialiser-un-nombre"},"3. Factorialiser un nombre"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/factorialize-a-number"}),"Learn Basic Algorithm Scripting: Factorialize a Number | freeCodeCamp.org")),Object(o.mdx)("p",null,"Renvoyez la factorielle de l'entier fourni.\nSi l'entier est repr\xe9sent\xe9 par la lettre n, une factorielle est le produit de tous les entiers positifs inf\xe9rieurs ou \xe9gaux \xe0 n.\nLes factorielles sont souvent repr\xe9sent\xe9es avec la notation abr\xe9g\xe9e ",Object(o.mdx)("inlineCode",{parentName:"p"},"n!"),"\nPar exemple : ",Object(o.mdx)("inlineCode",{parentName:"p"},"5! = 1 * 2 * 3 * 4 * 5 = 120"),"\nSeuls les entiers sup\xe9rieurs ou \xe9gaux \xe0 z\xe9ro seront fournis \xe0 la fonction."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"factorialize(5)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"factorialize(5)")," doit renvoyer 120.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"factorialize(10)")," doit renvoyer 3628800.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"factorialize(20)")," doit renvoyer 2432902008176640000.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"factorialize(0)")," doit renvoyer 1.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function factorialize(num) {\n  let fact = 1;\n  for (let i = 1; i <= num; i++) {\n    fact = fact * i\n  }\n  return fact;\n}\nfactorialize(5);\nconsole.log(factorialize(5)); // 120\nconsole.log(factorialize(10)); // 3628800\nconsole.log(factorialize(20)); // 2432902008176640000\nconsole.log(factorialize(0)); // 1\n")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"4-rechercher-le-mot-le-plus-long-dune-cha\xeene"},"4. Rechercher le mot le plus long d'une cha\xeene"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/find-the-longest-word-in-a-string"}),"Learn Basic Algorithm Scripting: Find the Longest Word in a String | freeCodeCamp.org")),Object(o.mdx)("p",null,"Renvoyez la longueur du mot le plus long de la phrase fournie.\nVotre r\xe9ponse doit \xeatre un nombre."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},'findLongestWordLength("The quick brown fox jumped over the lazy dog")')," devrait renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},'findLongestWordLength("The quick brown fox jumped over the lazy dog")')," devrait revenir 6.\n",Object(o.mdx)("inlineCode",{parentName:"p"},'findLongestWordLength("May the force be with you")')," devrait renvoyer 5.\n",Object(o.mdx)("inlineCode",{parentName:"p"},'findLongestWordLength("Google do a barrel roll")')," devrait renvoyer 6.\n",Object(o.mdx)("inlineCode",{parentName:"p"},'findLongestWordLength("What is the average airspeed velocity of an unladen swallow")')," devrait renvoyer 8.\n",Object(o.mdx)("inlineCode",{parentName:"p"},'findLongestWordLength("What if we try a super-long word such as otorhinolaryngology")')," doit renvoyer 19.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function findLongestWordLength(str) {\n  let word = /\\w+/g;\n  let result = str.match(word);\n  let letter = /\\w/g;\n  let num = 0;\n  for (let i = 0; i < result.length; i++) {\n    if (num < result[i].match(letter).length) {\n      num = result[i].match(letter).length;\n    };\n  };\n  return num;\n};\nfindLongestWordLength("The quick brown fox jumped over the lazy dog");\n\nconsole.log(findLongestWordLength("The quick brown fox jumped over the lazy dog")); // 6\nconsole.log(findLongestWordLength("May the force be with you")); // 5\nconsole.log(findLongestWordLength("Google do a barrel roll")); // 6\nconsole.log(findLongestWordLength("What is the average airspeed velocity of an unladen swallow")); // 8\nconsole.log(findLongestWordLength("What if we try a super-long word such as otorhinolaryngology")); // 19\n')),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"5-renvoyer-les-plus-grands-nombres-dans-les-tableaux"},"5. Renvoyer les plus grands nombres dans les tableaux"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/return-largest-numbers-in-arrays"}),"Learn Basic Algorithm Scripting: Return Largest Numbers in Arrays | freeCodeCamp.org")),Object(o.mdx)("p",null,"Renvoyez un tableau constitu\xe9 du plus grand nombre de chaque sous-tableau fourni. Pour plus de simplicit\xe9, le tableau fourni contiendra  exactement 4 sous-tableaux.\nN'oubliez pas que vous pouvez  parcourir un tableau avec une simple boucle ",Object(o.mdx)("inlineCode",{parentName:"p"},"for")," et acc\xe9der \xe0 chaque  membre avec la syntaxe de tableau ",Object(o.mdx)("inlineCode",{parentName:"p"},"arr[i]"),"."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"mostOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]])")," doit renvoyer un tableau.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"largestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]])")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[27, 5 , 39, 1001]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"largestOfFour([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]])")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[9, 35 , 97, 1000000]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mostOfFour([[17, 23, 25, 12], [25, 7, 34, 48], [4, -10, 18, 21], [-72, -3, -17, -10]])")," doit renvoyer  ",Object(o.mdx)("inlineCode",{parentName:"p"},"[25, 48, 21, -3]"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function largestOfFour(arr) {\n  let newArr = [];\n  for (let i = 0; i < arr.length; i++) {\n    let numMax = Number('-Infinity');\n    for (let j = 0; j < arr[i].length; j++) {      \n      if (numMax < arr[i][j]) {\n        numMax = arr[i][j];\n      }\n    }\n    newArr.push(numMax)\n  }\n  return newArr;\n}\n\nlargestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);\n\nconsole.log(mostOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]])); // [5, 27, 39, 1001]\nconsole.log(largestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]])); // [27, 5, 39, 1001]\nconsole.log(largestOfFour([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]])); // [9, 35, 97, 1000000]\nconsole.log(mostOfFour([[17, 23, 25, 12], [25, 7, 34, 48], [4, -10, 18, 21], [-72, -3, -17, -10]])); // [25, 48, 21, -3]\n")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"6-confirmer-la-fin"},"6. Confirmer la fin"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/confirm-the-ending"}),"Learn Basic Algorithm Scripting: Confirm the Ending | freeCodeCamp.org")),Object(o.mdx)("p",null,"V\xe9rifiez si une cha\xeene (premier argument, ",Object(o.mdx)("inlineCode",{parentName:"p"},"str"),") se termine par la cha\xeene cible donn\xe9e (deuxi\xe8me argument, ",Object(o.mdx)("inlineCode",{parentName:"p"},"target"),").\nCe d\xe9fi peut \xeatre r\xe9solu avec la m\xe9thode ",Object(o.mdx)("inlineCode",{parentName:"p"},".endsWith()"),", qui a \xe9t\xe9  introduite dans ES2015. Mais dans le cadre de ce d\xe9fi, nous aimerions  que vous utilisiez \xe0 la place l'une des m\xe9thodes de sous-cha\xeene JavaScript."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Bastian", "n")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Congratulation", "on")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Connor", "n")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Walking on water and developing software from a specification are easy if both are frozen", "specification")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("He has to give me a new name", "name")')," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Open sesame", "same")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Open sesame", "sage")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Open sesame", "game")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("If you want to save our world, you must hurry. We dont know how much longer we can withstand the nothing", "mountain")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'confirmEnding("Abstraction", "action")')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\nVotre code ne doit pas utiliser la m\xe9thode int\xe9gr\xe9e ",Object(o.mdx)("inlineCode",{parentName:"p"},".endsWith()")," pour r\xe9soudre le probl\xe8me.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function confirmEnding(str, target) {\n  if (str.lastIndexOf(target) === (str.length - target.length)) {\n    return true\n  } else {\n    return false;\n  }\n};\n\nconfirmEnding("Bastian", "n");\n\nconsole.log(confirmEnding("Bastian", "n")); // true\nconsole.log(confirmEnding("Congratulation", "on")); // true\nconsole.log(confirmEnding("Connor", "n")); // false\nconsole.log(confirmEnding("Walking on water and developing software from a specification are easy if both are frozen", "specification")); // false\nconsole.log(confirmEnding("He has to give me a new name", "name")); // true\nconsole.log(confirmEnding("He has to give me a new name", "sage")); // false\nconsole.log(confirmEnding("He has to give me a new name", "game")); // false\nconsole.log(confirmEnding("If you want to save our world, you must hurry. We dont know how much longer we can withstand the nothing", "mountain")); // false\nconsole.log(confirmEnding("Abstraction", "action")); // true\n')),Object(o.mdx)("p",null,"Solutions (",Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-confirm-the-ending/16006"}),"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-confirm-the-ending/16006"),")"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function confirmEnding(str, target) {\n  return str.slice(str.length - target.length) === target;\n}\nconfirmEnding("He has to give me a new name", "name");\n')),Object(o.mdx)("p",null,"Explication du code :"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},"Nous utilisons d'abord la m\xe9thode ",Object(o.mdx)("inlineCode",{parentName:"li"},"slice")," pour copier la cha\xeene."),Object(o.mdx)("li",{parentName:"ul"},"Afin d'obtenir les derniers caract\xe8res de ",Object(o.mdx)("inlineCode",{parentName:"li"},"str")," \xe9quivalents \xe0 la longueur de ",Object(o.mdx)("inlineCode",{parentName:"li"},"target"),", nous utilisons la m\xe9thode ",Object(o.mdx)("inlineCode",{parentName:"li"},"slice"),"."),Object(o.mdx)("li",{parentName:"ul"},"Le premier param\xe8tre \xe0 l'int\xe9rieur de la m\xe9thode ",Object(o.mdx)("inlineCode",{parentName:"li"},"slice")," est l'index de d\xe9part et le deuxi\xe8me param\xe8tre serait l'index de fin."),Object(o.mdx)("li",{parentName:"ul"},"Par exemple, ",Object(o.mdx)("inlineCode",{parentName:"li"},"str.slice(10, 17)")," renverra ",Object(o.mdx)("inlineCode",{parentName:"li"},"give me"),"."),Object(o.mdx)("li",{parentName:"ul"},"Dans ce cas, nous n'incluons qu'un seul param\xe8tre dont il copiera tout \xe0 partir de l'index de d\xe9part."),Object(o.mdx)("li",{parentName:"ul"},"Nous soustrayons la longueur de ",Object(o.mdx)("inlineCode",{parentName:"li"},"str")," et la longueur de ",Object(o.mdx)("inlineCode",{parentName:"li"},"target"),", de  cette fa\xe7on, nous obtiendrons les derniers caract\xe8res restants  \xe9quivalents \xe0 la longueur de ",Object(o.mdx)("inlineCode",{parentName:"li"},"target"),"."),Object(o.mdx)("li",{parentName:"ul"},"Enfin, nous comparons le r\xe9sultat de retour de ",Object(o.mdx)("inlineCode",{parentName:"li"},"slice")," \xe0 ",Object(o.mdx)("inlineCode",{parentName:"li"},"target")," et v\xe9rifions si elles ont les m\xeames caract\xe8res.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function confirmEnding(str, target) {\n  let re = new RegExp(target + "$", "i");\n  return re.test(str);\n}\nconsole.log(confirmEnding("Bastian", "n"));\n')),Object(o.mdx)("p",null,"Explication du code :"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},"Nous devons cr\xe9er un mod\xe8le \xe0 partir de la variable ",Object(o.mdx)("inlineCode",{parentName:"li"},"target")," qui existe \xe0 la fin de la cha\xeene ",Object(o.mdx)("inlineCode",{parentName:"li"},"str"),"."),Object(o.mdx)("li",{parentName:"ul"},"Puisque nous allons utiliser une variable qui changera le mod\xe8le \xe0  chaque fois que la fonction sera appel\xe9e, nous utiliserons le  constructeur de l'objet d'expression r\xe9guli\xe8re ",Object(o.mdx)("inlineCode",{parentName:"li"},"new RegExp(pattern [,  flags])"),", donc nous commen\xe7ons par : ",Object(o.mdx)("inlineCode",{parentName:"li"},"new RegExp(target)"),"."),Object(o.mdx)("li",{parentName:"ul"},"Ensuite,  nous devons v\xe9rifier \xe0 la fin de la cha\xeene, donc nous concat\xe9nons \xe0 la variable ",Object(o.mdx)("inlineCode",{parentName:"li"},"target")," le caract\xe8re ",Object(o.mdx)("inlineCode",{parentName:"li"},"$")," pour correspondre \xe0 la fin : ",Object(o.mdx)("inlineCode",{parentName:"li"},"new RegExp (target + '$')"),"."),Object(o.mdx)("li",{parentName:"ul"},"Nous utilisons le drapeau ",Object(o.mdx)("inlineCode",{parentName:"li"},"i")," pour ignorer la casse du mod\xe8le et nous avons notre RegExp compl\xe9t\xe9 : ",Object(o.mdx)("inlineCode",{parentName:"li"},"new RegExp(target + '$', 'i')"),", ou nous pouvons enti\xe8rement ignorer le drapeau."),Object(o.mdx)("li",{parentName:"ul"},"Enfin,  nous utilisons notre expression r\xe9guli\xe8re avec la m\xe9thode ",Object(o.mdx)("inlineCode",{parentName:"li"},"test")," sur la cha\xeene donn\xe9e, pour v\xe9rifier si la cha\xeene se termine par le mod\xe8le et  renvoie ",Object(o.mdx)("inlineCode",{parentName:"li"},"true")," ou ",Object(o.mdx)("inlineCode",{parentName:"li"},"false")," en cons\xe9quence.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function confirmEnding(str, target) {\n  return str.slice(-target.length) === target\n}\nconfirmEnding("Bastian", "n");\n')),Object(o.mdx)("p",null,"Explication du code :"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},"Si un nombre n\xe9gatif est fourni comme  premier param\xe8tre \xe0 ",Object(o.mdx)("inlineCode",{parentName:"li"},"slice()"),", le d\xe9calage est pris en arri\xe8re \xe0 partir de la fin de la cha\xeene.")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"7-r\xe9p\xe9ter-une-cha\xeene-r\xe9p\xe9ter-une-cha\xeene"},"7. R\xe9p\xe9ter une cha\xeene R\xe9p\xe9ter une cha\xeene"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/repeat-a-string-repeat-a-string"}),"Learn Basic Algorithm Scripting: Repeat a String Repeat a String | freeCodeCamp.org")),Object(o.mdx)("p",null,"R\xe9p\xe9tez une cha\xeene donn\xe9e ",Object(o.mdx)("inlineCode",{parentName:"p"},"str")," (premier argument) ",Object(o.mdx)("inlineCode",{parentName:"p"},"num")," fois  (deuxi\xe8me argument). Renvoyez une cha\xeene vide si ",Object(o.mdx)("inlineCode",{parentName:"p"},"num")," n'est pas un nombre positif. Dans le cadre de ce d\xe9fi, n'utilisez pas la m\xe9thode int\xe9gr\xe9e ",Object(o.mdx)("inlineCode",{parentName:"p"},".repeat()"),"."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('*', 3)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'***'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('abc', 3)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'abcabcabc'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('abc', 4)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'abcabcabcabc'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('abc', 1)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'abc'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('*', 8)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'****'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('abc', -2)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"''"),".\nLa m\xe9thode int\xe9gr\xe9e ",Object(o.mdx)("inlineCode",{parentName:"p"},"repeat()")," ne doit pas \xeatre utilis\xe9e.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"repeatStringNumTimes('abc', 0)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"''"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function repeatStringNumTimes(str, num) {\n  let repeatString = "";\n  if (num <= 0 || num === NaN) {\n    return "";\n  } else {\n    for (let i = 0; i < num; i++) {\n      repeatString = repeatString + str;\n    }\n  return repeatString;\n  };\n};\n\nrepeatStringNumTimes("abc", 3);\n\nconsole.log(repeatStringNumTimes("abc", 3)); // abcabcabc\nconsole.log(repeatStringNumTimes("*", 3)); // ***\nconsole.log(repeatStringNumTimes("abc", 4)); // abcabcabcabc\nconsole.log(repeatStringNumTimes("abc", 1)); // abc\nconsole.log(repeatStringNumTimes("*", 8)); // ********\nconsole.log(repeatStringNumTimes("abc", -2)); // \nconsole.log(repeatStringNumTimes("abc", 0)); // \n')),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"8-tronquer-une-cha\xeene"},"8. Tronquer une cha\xeene"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/truncate-a-string"}),"Learn Basic Algorithm Scripting: Truncate a String | freeCodeCamp.org")),Object(o.mdx)("p",null,"Tronquez une cha\xeene (premier argument) si elle est plus longue que la  longueur de cha\xeene maximale donn\xe9e (deuxi\xe8me argument). Renvoie la  cha\xeene tronqu\xe9e avec  ",Object(o.mdx)("inlineCode",{parentName:"p"},"...")," final."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"truncateString('A-tisket a-tasket A green and yellow basket', 8)")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'A-tisket...'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"truncateString('Peter Piper a choisi un pic de poivrons marin\xe9s', 11)")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'Peter Piper...'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"truncateString('A-tisket a-tasket A green and yellow basket', 'A-tisket a-tasket A  green and yellow basket'.length)")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'A-tisket a-tasket A  green and yellow basket'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"truncateString('A-tisket a-tasket A  green and yellow basket', 'A-tisket a-tasket A green and yellow  basket'.length + 2)")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'A-tisket a-tasket A green and  yellow basket'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"truncateString('A-', 1)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'A...'"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"truncateString('Absolutely Longer', 2)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"'Ab...'"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function truncateString(str, num) {\n  if (str.length <= num) {\n    return str.slice(0, num);\n  } else {\n  return str.slice(0, num) + "...";\n  };\n}\n\ntruncateString("A-tisket a-tasket A green and yellow basket", 8);\nconsole.log(truncateString("A-tisket a-tasket A green and yellow basket", 8)); // A-tisket...\nconsole.log(truncateString("Peter Piper picked a peck of pickled peppers", 11)); // Peter Piper...\nconsole.log(truncateString("A-tisket a-tasket A green and yellow basket", "A-tisket a-tasket A green and yellow basket".length)); // A-tisket a-tasket A green and yellow basket\nconsole.log(truncateString("A-tisket a-tasket A green and yellow basket", "A-tisket a-tasket A green and yellow basket".length + 2)); // A-tisket a-tasket A green and yellow basket\nconsole.log(truncateString("A-", 1)); // A...\nconsole.log(truncateString("Absolutely Longer", 2)); // Ab...\n')),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"9-qui-trouve-garde"},"9. Qui trouve garde"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/finders-keepers"}),"Learn Basic Algorithm Scripting: Finders Keepers | freeCodeCamp.org")),Object(o.mdx)("p",null,"Cr\xe9ez une fonction qui regarde \xe0 travers un  tableau ",Object(o.mdx)("inlineCode",{parentName:"p"},"arr")," et renvoie le premier \xe9l\xe9ment qui passe un \xab test de v\xe9rit\xe9 \xbb. Cela signifie que pour un \xe9l\xe9ment ",Object(o.mdx)("inlineCode",{parentName:"p"},"x"),", le \xab test de v\xe9rit\xe9 \xbb est pass\xe9 si ",Object(o.mdx)("inlineCode",{parentName:"p"},"func(x)")," est ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),". Si aucun \xe9l\xe9ment ne r\xe9ussit le test, renvoie  ",Object(o.mdx)("inlineCode",{parentName:"p"},"undefined"),"."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"findElement([1, 3, 5, 8, 9, 10], function(num) {return num % 2 === 0;})")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"8"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"findElement([1, 3, 5, 9], function(num) {return num % 2 === 0;})")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"undefined"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function findElement(arr, func) {\n  let num = 0;\n  while (num < arr.length) {\n    if (func(arr[num]) === true) {\n      break;\n    }\n    num++;\n  }\n  return arr[num];\n}\n\nfindElement([1, 2, 3, 4], num => num % 2 === 0);\n\nconsole.log(findElement([1, 2, 3, 4], num => num % 2 === 0)); // 2\nconsole.log(findElement([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; })); // 8\nconsole.log(findElement([1, 3, 5, 9], function(num) { return num % 2 === 0; })); // undefined\n")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"10-boo-qui"},"10. Boo qui"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/boo-who"}),"Learn Basic Algorithm Scripting: Boo who | freeCodeCamp.org")),Object(o.mdx)("p",null,"V\xe9rifiez si une valeur est class\xe9e comme primitive bool\xe9enne. Renvoie vrai ou faux.\nLes primitives bool\xe9ennes sont vraies et fausses."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"booWho(true)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho(false)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho([1, 2, 3])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho([]. slice)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho({'a': 1})")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho(1)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho(NaN)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho('a')")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho('true')")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"booWho('false')")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function booWho(bool) {\n  return typeof bool === \'boolean\' ? true : false;\n}\n\nbooWho(null);\n\nconsole.log(booWho(null)); // false\nconsole.log(booWho(true)); // true\nconsole.log(booWho(false)); // true\nconsole.log(booWho([1, 2, 3])); // false\nconsole.log(booWho([].slice)); // false\nconsole.log(booWho({ "a": 1 })); // false\nconsole.log(booWho(1)); // false\nconsole.log(booWho(NaN)); // false\nconsole.log(booWho("a")); // false\nconsole.log(booWho("true")); // false\nconsole.log(booWho("false")); // false\n')),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"11-titrer-une-phrase"},"11. Titrer une phrase"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/title-case-a-sentence"}),"Learn Basic Algorithm Scripting: Title Case a Sentence | freeCodeCamp.org")),Object(o.mdx)("p",null,"Renvoyez la cha\xeene fournie avec la premi\xe8re lettre de chaque mot en  majuscule. Assurez-vous que le reste du mot est en minuscules.\nPour les besoins de cet exercice, vous devez \xe9galement mettre en majuscule les mots de connexion tels que \xab le \xbb et \xab de \xbb."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"titleCase('I'm a little tea pot')")," doit renvoyer une cha\xeene.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"titleCase('I'm a little tea pot')")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"I'm A Little Tea Pot"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"titleCase('sHoRt and sToUt')")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"Short And Stout"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'titleCase("HERE IS MY HANDLE HERE IS MY SPOUT")')," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"Here Is My Handle Here Is My Spout"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function titleCase(str) {\n  let sentence = str.toLowerCase().split(" ");\n  for (let i = 0; i < sentence.length; i++) {\n    sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n  }\n  return sentence.join(" ");\n}\n\ntitleCase("I\'m a little tea pot");\n\nconsole.log(titleCase("I\'m a little tea pot")); // I\'m A Little Tea Pot\nconsole.log(titleCase("sHoRt AnD sToUt")); // Short And Stout\nconsole.log(titleCase("HERE IS MY HANDLE HERE IS MY SPOUT")); // Here Is My Handle Here Is My Spout\n')),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-title-case-a-sentence/16088"}),"solutions")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"12-trancher-et-\xe9pisser"},"12. Trancher et \xe9pisser"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/slice-and-splice"}),"Learn Basic Algorithm Scripting: Slice and Splice | freeCodeCamp.org")),Object(o.mdx)("p",null,"Vous recevez deux tableaux et un index.\nCopiez chaque \xe9l\xe9ment du premier tableau dans le deuxi\xe8me tableau, dans l'ordre.\nCommencez \xe0 ins\xe9rer des \xe9l\xe9ments \xe0 l'index ",Object(o.mdx)("inlineCode",{parentName:"p"},"n")," du deuxi\xe8me tableau.\nRenvoyez le tableau r\xe9sultant. Les tableaux d'entr\xe9e doivent rester les m\xeames apr\xe8s l'ex\xe9cution de la fonction."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"frankenSplice([1, 2, 3], [4, 5], 1)")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[4, 1, 2, 3, 5]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"frankenSplice([1, 2], ['a', 'b'], 1)")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"['a', 1, 2, 'b']"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'frankenSplice(["claw", "tentacle"], ["head", "shoulders", "knees", "toes"], 2)'),"  devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},'["head", "shoulders", "claw", "tentacle", "knees", "toes"]'),".\nTous les \xe9l\xe9ments du premier tableau doivent \xeatre ajout\xe9s au deuxi\xe8me tableau dans leur ordre d'origine.\nLe premier tableau doit rester le m\xeame apr\xe8s l'ex\xe9cution de la fonction.\nLe deuxi\xe8me tableau doit rester le m\xeame apr\xe8s l'ex\xe9cution de la fonction.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function frankenSplice(arr1, arr2, n) {\n  let arr3 = arr2.slice();\n  arr3.splice(n, 0, ...arr1);  \n  return arr3;\n}\n\nfrankenSplice([1, 2, 3], [4, 5, 6], 1);\n\nconsole.log(frankenSplice([1, 2, 3], [4, 5, 6], 1)); // [ 4, 1, 2, 3, 5, 6 ]\nconsole.log(frankenSplice([1, 2, 3], [4, 5], 1)); // [ 4, 1, 2, 3, 5 ]\nconsole.log(frankenSplice([1, 2], [\"a\", \"b\"], 1)); // [ 'a', 1, 2, 'b' ]\nconsole.log(frankenSplice([\"claw\", \"tentacle\"], [\"head\", \"shoulders\", \"knees\", \"toes\"], 2)); //[ 'head', 'shoulders', 'claw', 'tentacle', 'knees', 'toes' ]\n")),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-slice-and-splice/301148"}),"solutions")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"13-videur-de-faux"},"13. Videur de faux"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/falsy-bouncer"}),"Learn Basic Algorithm Scripting: Falsy Bouncer | freeCodeCamp.org")),Object(o.mdx)("p",null,"Supprimez toutes les valeurs fausses d'un tableau.\nLes valeurs fausses en JavaScript sont ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),", ",Object(o.mdx)("inlineCode",{parentName:"p"},"null"),", ",Object(o.mdx)("inlineCode",{parentName:"p"},"0"),", ",Object(o.mdx)("inlineCode",{parentName:"p"},'""'),", ",Object(o.mdx)("inlineCode",{parentName:"p"},"undefined")," et ",Object(o.mdx)("inlineCode",{parentName:"p"},"NaN"),".\nConseil : essayez de convertir chaque valeur en valeur bool\xe9enne."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},'bouncer([7, "ate", "", false, 9])')," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},'[7, "ate", 9]'),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'bouncer(["a", "b", "c"])')," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},'["a", "b", "c"]'),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},'bouncer([false, null, 0, NaN, undefined, ""])')," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"bouncer([null, NaN, 1, 2, undefined])")," devrait renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[1, 2]"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function bouncer(arr) {\n  let newArray = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) newArray.push(arr[i]);\n  }\n  return newArray;\n}\n\nbouncer([7, "ate", "", false, 9]);\n\nconsole.log(bouncer([7, "ate", "", false, 9])); // [ 7, \'ate\', 9 ]\nconsole.log(bouncer(["a", "b", "c"])); // [ \'a\', \'b\', \'c\' ]\nconsole.log(bouncer([false, null, 0, NaN, undefined, ""])); // []\nconsole.log(bouncer([null, NaN, 1, 2, undefined])); // [ 1, 2 ]\n\n// ou\n\nfunction bouncer(arr) {\n  return arr.filter(Boolean);\n}\n')),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-falsy-bouncer/16014"}),"solutions")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"14-o\xf9-est-ce-que-jappartiens"},"14. O\xf9 est-ce que j'appartiens"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/where-do-i-belong"}),"Learn Basic Algorithm Scripting: Where do I Belong | freeCodeCamp.org")),Object(o.mdx)("p",null,"Renvoyez l'index le plus bas auquel une valeur (deuxi\xe8me argument) doit  \xeatre ins\xe9r\xe9e dans un tableau (premier argument) une fois qu'elle a \xe9t\xe9  tri\xe9e. La valeur renvoy\xe9e doit \xeatre un nombre.\nPar exemple, ",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([1,2,3,4], 1,5)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"1")," car il est sup\xe9rieur \xe0 ",Object(o.mdx)("inlineCode",{parentName:"p"},"1")," (index 0), mais inf\xe9rieur \xe0 ",Object(o.mdx)("inlineCode",{parentName:"p"},"2")," (index 1).\nDe m\xeame, ",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([20,3,5], 19)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"2")," car une fois le  tableau tri\xe9, il ressemblera \xe0 ",Object(o.mdx)("inlineCode",{parentName:"p"},"[3,5,20]")," et ",Object(o.mdx)("inlineCode",{parentName:"p"},"19")," est inf\xe9rieur \xe0 ",Object(o.mdx)("inlineCode",{parentName:"p"},"20")," (index  2) et sup\xe9rieur \xe0 ",Object(o.mdx)("inlineCode",{parentName:"p"},"5")," ( index 1)."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([10, 20, 30, 40, 50], 35)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"3"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([10, 20, 30, 40, 50], 35)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([10, 20, 30, 40, 50], 30)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"2"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([10, 20, 30, 40, 50], 30)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([40, 60], 50)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"1"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([40, 60], 50)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([3, 10, 5], 3)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"0"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([3, 10, 5], 3)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([5, 3, 20, 3], 5)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"2"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([5, 3, 20, 3], 5)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([2, 20, 10], 19)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"2"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([2, 20, 10], 19)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([2, 5, 10], 15)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"3"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([2, 5, 10], 15)")," doit renvoyer un nombre.\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([], 1)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"0"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"getIndexToIns([], 1)")," doit renvoyer un nombre.")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function getIndexToIns(arr, num) {\n  arr.sort(function(a, b) {\n  return a - b;\n  });\n  \n  let index = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (num > arr[i]) {\n      index++;\n    }\n  }\n  return index;\n}\n\ngetIndexToIns([40, 60], 50)\n\nconsole.log(getIndexToIns([10, 20, 30, 40, 50], 35)); // 3\nconsole.log(getIndexToIns([10, 20, 30, 40, 50], 30)); // 2\nconsole.log(getIndexToIns([40, 60], 50)); // 1\nconsole.log(getIndexToIns([3, 10, 5], 3)); // 0\nconsole.log(getIndexToIns([5, 3, 20, 3], 5)); // 2\nconsole.log(getIndexToIns([2, 20, 10], 19)); // 2\nconsole.log(getIndexToIns([2, 5, 10], 15)); // 3\nconsole.log(getIndexToIns([], 1)); // 0\n")),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-where-do-i-belong/16094"}),"solutions")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"15-mutations"},"15. Mutations"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations"}),"Learn Basic Algorithm Scripting: Mutations | freeCodeCamp.org")),Object(o.mdx)("p",null,"Renvoyez ",Object(o.mdx)("inlineCode",{parentName:"p"},"true")," si la cha\xeene du premier \xe9l\xe9ment du tableau contient toutes les lettres de la cha\xeene du deuxi\xe8me \xe9l\xe9ment du tableau.\nPar exemple, ",Object(o.mdx)("inlineCode",{parentName:"p"},"['hello', 'Hello']"),", doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true")," car toutes les lettres de la deuxi\xe8me cha\xeene sont pr\xe9sentes dans la premi\xe8re, en ignorant la  casse.\nLes arguments ",Object(o.mdx)("inlineCode",{parentName:"p"},"['hello', 'hey']")," doivent renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false")," car la cha\xeene ",Object(o.mdx)("inlineCode",{parentName:"p"},"'hello'")," ne contient pas de ",Object(o.mdx)("inlineCode",{parentName:"p"},"'y'"),".\nEnfin, ",Object(o.mdx)("inlineCode",{parentName:"p"},"['Alien', 'line']"),", doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true")," car toutes les lettres de ",Object(o.mdx)("inlineCode",{parentName:"p"},"'line'")," sont pr\xe9sentes dans ",Object(o.mdx)("inlineCode",{parentName:"p"},"'Alien'"),"."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['hello', 'hey'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['hello', 'Hello'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['zyxwvutsrqponmlkjihgfedcba', 'qrstu'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['Mary', 'Army'])")," devrait retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['Mary', 'Aarmy'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['Alien', 'line'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['floor', 'for'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['hello', 'neo'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['voodoo', 'no'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['ate', 'date'])")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['Tiger', 'Zebra'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"false"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"mutation(['Noel', 'Ole'])")," doit retourner ",Object(o.mdx)("inlineCode",{parentName:"p"},"true"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function mutation(arr) {\n  let arr0 = arr[0].toLowerCase();\n  let arr1 = arr[1].toLowerCase();\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr0.indexOf(arr1[i]) < 0) return false;\n  }\n  return true;\n} \n\nmutation(["hello", "hey"]);\n\nconsole.log(mutation(["hello", "hey"])); // false\nconsole.log(mutation(["hello", "Hello"])); // true\nconsole.log(mutation(["zyxwvutsrqponmlkjihgfedcba", "qrstu"])); // true\nconsole.log(mutation(["Mary", "Army"])); // true\nconsole.log(mutation(["Mary", "Aarmy"])); // true\nconsole.log(mutation(["Alien", "line"])); // true\nconsole.log(mutation(["floor", "for"])); // true\nconsole.log(mutation(["hello", "neo"])); // false\nconsole.log(mutation(["voodoo", "no"])); // false\nconsole.log(mutation(["ate", "date"])); // false\nconsole.log(mutation(["Tiger", "Zebra"])); // false\nconsole.log(mutation(["Noel", "Ole"])); // true\n')),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-mutations/16025"}),"solutions")),Object(o.mdx)("hr",null),Object(o.mdx)("h2",{id:"16-chunky-monkey"},"16. Chunky Monkey"),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(r.a)({parentName:"p"},{href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/chunky-monkey"}),"Learn Basic Algorithm Scripting: Chunky Monkey | freeCodeCamp.org")),Object(o.mdx)("p",null,"\xc9crivez une fonction qui divise un tableau (premier argument) en groupes de la longueur ",Object(o.mdx)("inlineCode",{parentName:"p"},"size")," (deuxi\xe8me argument) et les renvoie sous forme de tableau \xe0 deux dimensions."),Object(o.mdx)("blockquote",null,Object(o.mdx)("p",{parentName:"blockquote"},Object(o.mdx)("inlineCode",{parentName:"p"},'chunkArrayInGroups(["a", "b", "c", "d"], 2)')," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},'[["a", "b"], ["c", "d"]]'),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[[0, 1, 2], [3, 4, 5]]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[[0, 1], [2, 3], [4, 5]]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[[0, 1, 2, 3], [4, 5]]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[[0, 1, 2], [3, 4, 5], [6]]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[[0, 1, 2, 3], [4, 5, 6, 7], [8]]"),".\n",Object(o.mdx)("inlineCode",{parentName:"p"},"chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2)")," doit renvoyer ",Object(o.mdx)("inlineCode",{parentName:"p"},"[[0, 1], [2, 3], [4, 5], [6, 7], [8]]"),".")),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'function chunkArrayInGroups(arr, size) {\n  let newArr = [];\n  \n  for (let i = 0; i < arr.length; i += size) {\n    newArr.push(arr.slice(i, i + size));    \n  }  \n  return newArr;\n}\n\nchunkArrayInGroups(["a", "b", "c", "d"], 2);\n\nconsole.log(chunkArrayInGroups(["a", "b", "c", "d"], 2)); // [[\'a\', \'b\'], [\'c\', \'d\']]\nconsole.log(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3)); // [[0, 1, 2], [3, 4, 5]]\nconsole.log(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2)); // [[0, 1], [2, 3], [4, 5]]\nconsole.log(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4)); // [[0, 1, 2, 3], [4, 5]]\nconsole.log(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3)); // [[0, 1, 2], [3, 4, 5], [6]]\nconsole.log(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4)); // [[0, 1, 2, 3], [4, 5, 6, 7], [8]]\nconsole.log(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2)); // [[0, 1], [2, 3], [4,5], [6,7], [8]]\n')))}m.isMDXComponent=!0}}]);