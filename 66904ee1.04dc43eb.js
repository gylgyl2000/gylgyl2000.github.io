(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{125:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return m})),t.d(n,"default",(function(){return d}));var a=t(3),i=t(7),r=(t(0),t(214)),l={id:"Codecademy-Learn_JavaScript-11-fr",title:"Modules JavaScript interm\xe9diaires"},o={unversionedId:"Codecademy/Codecademy-Learn_JavaScript-11-fr",id:"Codecademy/Codecademy-Learn_JavaScript-11-fr",isDocsHomePage:!1,title:"Modules JavaScript interm\xe9diaires",description:"Apprenez \xe0 utiliser les modules JavaScript, un moyen de cr\xe9er une logique r\xe9utilisable dans vos programmes.",source:"@site/docs/Codecademy/Codecademy-Learn_JavaScript-11-fr.md",slug:"/Codecademy/Codecademy-Learn_JavaScript-11-fr",permalink:"/docs/Codecademy/Codecademy-Learn_JavaScript-11-fr",editUrl:"https://github.com/gylgyl2000/laloutre.github.io/edit/main/docs/Codecademy/Codecademy-Learn_JavaScript-11-fr.md",version:"current"},m=[{value:"01. Bonjour les modules",id:"01-bonjour-les-modules",children:[]},{value:"02. module.exports",id:"02-moduleexports",children:[]},{value:"03. require()",id:"03-require",children:[]},{value:"04. module.exports II",id:"04-moduleexports-ii",children:[]},{value:"05. export default",id:"05-export-default",children:[]},{value:"06. import",id:"06-import",children:[]},{value:"07. Exportations nomm\xe9es",id:"07-exportations-nomm\xe9es",children:[]},{value:"08. Importations nomm\xe9es",id:"08-importations-nomm\xe9es",children:[]},{value:"09. Exporter les exportations nomm\xe9es",id:"09-exporter-les-exportations-nomm\xe9es",children:[]},{value:"10. Importer des importations nomm\xe9es",id:"10-importer-des-importations-nomm\xe9es",children:[]},{value:"11. Exporter sous",id:"11-exporter-sous",children:[]},{value:"12. Importer sous",id:"12-importer-sous",children:[]},{value:"13. Combinaison d&#39;instructions d&#39;exportation",id:"13-combinaison-dinstructions-dexportation",children:[]},{value:"14. Combinaison d&#39;instructions d&#39;importation",id:"14-combinaison-dinstructions-dimportation",children:[]},{value:"15. Revue",id:"15-revue",children:[]},{value:"Aide-m\xe9moire",id:"aide-m\xe9moire",children:[{value:"Importez des modules Javascript avec la fonction <code>require</code>",id:"importez-des-modules-javascript-avec-la-fonction-require",children:[]},{value:"Javascript interm\xe9diaire : module <code>export</code>",id:"javascript-interm\xe9diaire--module-export",children:[]},{value:"<code>export default</code> Javascript",id:"export-default-javascript",children:[]},{value:"Utilisation du mot-cl\xe9 <code>import</code> en Javascript",id:"utilisation-du-mot-cl\xe9-import-en-javascript",children:[]}]}],p={rightToc:m};function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.mdx)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,"Apprenez \xe0 utiliser les modules JavaScript, un moyen de cr\xe9er une logique r\xe9utilisable dans vos programmes."),Object(r.mdx)("h2",{id:"01-bonjour-les-modules"},"01. Bonjour les modules"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/hello-modules"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Les ",Object(r.mdx)("em",{parentName:"p"},"modules")," JavaScript sont des morceaux de  code r\xe9utilisables qui peuvent \xeatre export\xe9s \xe0 partir d'un programme et  import\xe9s pour \xeatre utilis\xe9s dans un autre programme.\nLes modules  sont particuli\xe8rement utiles pour un certain nombre de raisons. En  s\xe9parant le code avec une logique similaire en fichiers appel\xe9s modules, nous pouvons :"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"trouver, corriger et d\xe9boguer le code plus facilement ;"),Object(r.mdx)("li",{parentName:"ul"},"r\xe9utiliser et recycler la logique d\xe9finie dans diff\xe9rentes parties de notre application ;"),Object(r.mdx)("li",{parentName:"ul"},"garder les informations priv\xe9es et prot\xe9g\xe9es des autres modules ;"),Object(r.mdx)("li",{parentName:"ul"},"et, surtout, \xe9viter la pollution de l'espace de noms global et les  \xe9ventuelles collisions de d\xe9nomination, en s\xe9lectionnant prudemment les  variables et le comportement que nous chargeons dans un programme.")),Object(r.mdx)("p",null,"Dans cette le\xe7on, nous aborderons deux mani\xe8res d'impl\xe9menter des modules en JavaScript : les syntaxes ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()")," de ",Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/fr/about/"}),"Node.js\u2019s"),", ainsi que la syntaxe d'import / export ES6."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,"Une fois que vous avez l'impression d'avoir une compr\xe9hension de haut niveau des modules, passez \xe0 l'exercice suivant."),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"02-moduleexports"},"02. module.exports"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/module-exports"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Nous pouvons commencer avec les modules en d\xe9finissant un module dans un  fichier et en rendant le module disponible pour une utilisation dans un  autre fichier avec la syntaxe Node.js ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),". Chaque fichier JavaScript ex\xe9cut\xe9 dans Node a un objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"module")," local avec une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"exports")," utilis\xe9e pour d\xe9finir ce qui doit \xeatre export\xe9 \xe0 partir du  fichier.\nVoici un exemple de la fa\xe7on de d\xe9finir un module et de l'exporter \xe0 l'aide de l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),".\nDans ",Object(r.mdx)("strong",{parentName:"p"},"menu.js"),", nous \xe9crivons :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'let Menu = {};\nMenu.specialty = "Roasted Beet Burger with Mint Sauce";\n\nmodule.exports = Menu;\n')),Object(r.mdx)("p",null,"Voyons ce que signifie ce code."),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"let Menu = {};")," cr\xe9e  l'objet qui repr\xe9sente le module ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu"),". L'instruction contient une  variable en majuscule nomm\xe9e ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu")," qui est d\xe9finie comme \xe9gale \xe0 un objet vide."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"Menu.specialty")," est d\xe9fini comme une propri\xe9t\xe9 du module ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu"),". Nous ajoutons des donn\xe9es \xe0 l'objet ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu")," en d\xe9finissant des  propri\xe9t\xe9s sur cet objet et en attribuant une valeur aux propri\xe9t\xe9s."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},'"Roasted Beet Burger with Mint Sauce";')," est la valeur stock\xe9e dans la propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu.specialty"),"."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"module.exports = Menu;")," exporte l'objet ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu")," en tant que module. ",Object(r.mdx)("inlineCode",{parentName:"li"},"module")," est une variable qui repr\xe9sente le module et les ",Object(r.mdx)("inlineCode",{parentName:"li"},"exports")," expose le module en tant qu'objet.")),Object(r.mdx)("p",null,"Le mod\xe8le que nous utilisons pour exporter les modules est donc :"),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Cr\xe9ez un objet pour repr\xe9senter le module."),Object(r.mdx)("li",{parentName:"ol"},"Ajoutez des propri\xe9t\xe9s ou des m\xe9thodes \xe0 l'objet module."),Object(r.mdx)("li",{parentName:"ol"},"Exportez le module avec ",Object(r.mdx)("inlineCode",{parentName:"li"},"module.exports"),".")),Object(r.mdx)("p",null,"Cr\xe9ons notre premier module."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Commen\xe7ons par impl\xe9menter le mod\xe8le ci-dessus dans un exemple. Dans ",Object(r.mdx)("strong",{parentName:"p"},"1-airplane.js"),", cr\xe9ez un objet nomm\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Dans le m\xeame fichier, ajoutez une propri\xe9t\xe9 \xe0 l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane")," nomm\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"myAirplane")," et d\xe9finissez-la sur ",Object(r.mdx)("inlineCode",{parentName:"p"},'"StarJet"'),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," Exportez le module."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// 1-airplane.js\nlet Airplane = {};\nAirplane.myAirplane = "StarJet";\nmodule.exports = Airplane;\n')),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"03-require"},"03. require()"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/require"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Pour utiliser le module export\xe9 et le comportement que nous d\xe9finissons  en son sein, nous importons le module dans un autre fichier. Dans Node.js, utilisez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()")," pour importer des modules.\nPar exemple, disons que nous voulons que le module contr\xf4le les donn\xe9es et  le comportement du menu, et que nous voulons un fichier s\xe9par\xe9 pour  g\xe9rer la commande. Nous cr\xe9erions un fichier s\xe9par\xe9 ",Object(r.mdx)("strong",{parentName:"p"},"order.js")," et importer le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Menu")," de ",Object(r.mdx)("strong",{parentName:"p"},"menu.js")," vers ",Object(r.mdx)("strong",{parentName:"p"},"order.js")," en utilisant ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()"),". ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()")," prend un argument de chemin de fichier pointant vers le  fichier du module d'origine.\nDans ",Object(r.mdx)("strong",{parentName:"p"},"order.js"),", nous \xe9cririons :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const Menu = require('./menu.js');\n\nfunction placeOrder() {\n  console.log('My order is: ' + Menu.specialty);\n}\n\nplaceOrder();\n")),Object(r.mdx)("p",null,"Nous avons maintenant tout le comportement de ",Object(r.mdx)("inlineCode",{parentName:"p"},"Menu")," disponible dans ",Object(r.mdx)("strong",{parentName:"p"},"order.js"),". Ici, on remarque :"),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Dans ",Object(r.mdx)("strong",{parentName:"li"},"order.js"),", nous importons le module en cr\xe9ant une variable ",Object(r.mdx)("inlineCode",{parentName:"li"},"const")," appel\xe9e ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu")," et en la d\xe9finissant \xe9gale \xe0 la valeur de la fonction  ",Object(r.mdx)("inlineCode",{parentName:"li"},"require()"),". Nous pouvons d\xe9finir le nom de cette variable sur tout ce  que nous voulons, comme ",Object(r.mdx)("inlineCode",{parentName:"li"},"menuItems"),"."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"require()")," est une fonction JavaScript qui charge un module. L\u2019argument est le chemin du fichier du  module : ",Object(r.mdx)("inlineCode",{parentName:"li"},"./menu.js"),". Avec ",Object(r.mdx)("inlineCode",{parentName:"li"},"require()"),", l'extension ",Object(r.mdx)("inlineCode",{parentName:"li"},".js")," est facultative et sera utilis\xe9e si elle n'est pas incluse."),Object(r.mdx)("li",{parentName:"ol"},"La fonction ",Object(r.mdx)("inlineCode",{parentName:"li"},"placeOrder()")," utilise alors le module ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu"),". En appelant ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu.specialty"),", nous  acc\xe9dons \xe0 la propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"specialty")," d\xe9finie dans le module ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu"),".")),Object(r.mdx)("p",null,"En y regardant de plus pr\xe8s, le mod\xe8le pour importer un module est :"),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Importez le module avec ",Object(r.mdx)("inlineCode",{parentName:"li"},"require()")," et affectez-le \xe0 une variable locale."),Object(r.mdx)("li",{parentName:"ol"},"Utilisez le module et ses propri\xe9t\xe9s dans un programme.")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Dans ",Object(r.mdx)("strong",{parentName:"p"},"1-missionControl.js"),", utilisez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()")," pour importer le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane")," depuis ",Object(r.mdx)("strong",{parentName:"p"},"1-plane.js"),".\nRappelez-vous que vous devrez utiliser le nom pr\xe9cis du fichier contenant le module."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Dans ",Object(r.mdx)("strong",{parentName:"p"},"1-missionControl.js"),", d\xe9finissez une fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayAirplane()"),". Dans  la fonction, enregistrez la valeur du module et sa propri\xe9t\xe9 dans la  console."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3. "),"Appelez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayAirplane()"),". Dans la  console, vous devriez voir le nom de l'avion que vous avez d\xe9fini dans  le module."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const Airplane = require('./1-airplane.js');\n\nfunction displayAirplane() {\n  console.log(Airplane.myAirplane);\n};\n\ndisplayAirplane(); // StarJet\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"04-moduleexports-ii"},"04. module.exports II"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/module-exports-ii"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Nous pouvons \xe9galement envelopper n'importe quelle collection de donn\xe9es et de fonctions dans un objet et exporter l'objet \xe0 l'aide de  ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),". Dans ",Object(r.mdx)("strong",{parentName:"p"},"menu.js"),", nous pourrions \xe9crire :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'module.exports = {\n  specialty: "Roasted Beet Burger with Mint Sauce",\n  getSpecialty: function() {\n    return this.specialty;\n  } \n};\n')),Object(r.mdx)("p",null,"Dans le code ci-dessus, notez :"),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"module.exports")," expose le module actuel en tant qu'objet."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"specialty")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"getSpecialty")," sont des propri\xe9t\xe9s de l'objet.")),Object(r.mdx)("p",null,"Ensuite, dans ",Object(r.mdx)("strong",{parentName:"p"},"order.js"),", nous \xe9crivons :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const Menu = require('./menu.js');\n\nconsole.log(Menu.getSpecialty());\n")),Object(r.mdx)("p",null,"Ici, nous pouvons toujours acc\xe9der au comportement dans le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Menu"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1. "),"Dans ",Object(r.mdx)("strong",{parentName:"p"},"2-plane.js"),", d\xe9finissez ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports")," \xe9gal \xe0 un objet vide."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2. "),"Dans l'objet, cr\xe9ez une cl\xe9 appel\xe9e ",Object(r.mdx)("inlineCode",{parentName:"p"},"myAirplane")," et d\xe9finissez-la sur une valeur ",Object(r.mdx)("inlineCode",{parentName:"p"},'"CloudJet"'),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3. "),"Encore une fois, dans ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),", cr\xe9ez une autre cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayAirplane")," et  d\xe9finissez-la sur une fonction anonyme. La fonction doit utiliser l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"this")," pour renvoyer ",Object(r.mdx)("inlineCode",{parentName:"p"},"myAirplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4. "),"Dans ",Object(r.mdx)("strong",{parentName:"p"},"2-missionControl.js"),", utilisez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()")," pour importer le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"5.")," Dans ",Object(r.mdx)("strong",{parentName:"p"},"2-missionControl.js"),", enregistrez le r\xe9sultat de l'appel de  ",Object(r.mdx)("inlineCode",{parentName:"p"},".displayAirplane()")," sur la console, en notant qu'il s'agit d'une m\xe9thode de l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// 2-plane.js\nmodule.exports = {\n  myAirplane: "CloudJet",\n  displayAirplane: function() {\n    return this.myAirplane;\n  }\n};\n')),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// 2-missionControl.js\nconst Airplane = require('./2-airplane.js');\nconsole.log(Airplane.displayAirplane()); // CloudJet\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"05-export-default"},"05. export default"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/export-default"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Node.js prend en charge ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()")," / ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),", mais depuis ES6, JavaScript prend en charge une nouvelle syntaxe plus lisible et plus  flexible pour l'exportation de modules. Celles-ci sont g\xe9n\xe9ralement divis\xe9es en deux techniques, l'exportation par d\xe9faut (",Object(r.mdx)("em",{parentName:"p"},"default export"),") et les exportations nomm\xe9es (",Object(r.mdx)("em",{parentName:"p"},"named exports"),").\nNous allons commencer par la premi\xe8re syntaxe, l'exportation par d\xe9faut. La syntaxe d'exportation par d\xe9faut  fonctionne de la m\xeame mani\xe8re que la syntaxe ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),", ce qui nous permet d'exporter un module par fichier.\nPrenons un exemple dans ",Object(r.mdx)("strong",{parentName:"p"},"menu.js"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let Menu = {};\n\nexport default Menu;\n")),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"export default")," utilise l'instruction JavaScript ",Object(r.mdx)("inlineCode",{parentName:"li"},"export")," pour exporter des objets JavaScript, des fonctions et des types de donn\xe9es  primitifs."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"Menu")," fait r\xe9f\xe9rence au nom de l'objet ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu"),", l'objet dont nous d\xe9finissons les propri\xe9t\xe9s dans nos modules.")),Object(r.mdx)("p",null,"Lors de l'utilisation de la syntaxe ES6, nous utilisons ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default")," \xe0 la place de ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports"),". Node.js ne prend pas en charge ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default")," par d\xe9faut, donc ",Object(r.mdx)("inlineCode",{parentName:"p"},"module.exports")," est  g\xe9n\xe9ralement utilis\xe9 pour le d\xe9veloppement Node.js et la syntaxe ES6 est utilis\xe9e pour le d\xe9veloppement front-end. Comme avec la plupart des  fonctionnalit\xe9s ES6, il est courant de transpiler du code car ES6 n'est  pas pris en charge par tous les navigateurs."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Dans ",Object(r.mdx)("strong",{parentName:"p"},"airplane.js"),", cr\xe9ons \xe0 nouveau un module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane")," \xe0 partir de z\xe9ro, cette fois en exportant le module avec ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default"),". Cr\xe9ez un objet  pour repr\xe9senter le module appel\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2. "),"Maintenant que  nous avons un objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),", nous pouvons continuer en ajoutant des  donn\xe9es sous forme de propri\xe9t\xe9s et de valeurs au module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),".\nCr\xe9ez une variable ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes")," et d\xe9finissez-la sur un tableau vide.  Assurez-vous que ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes")," est une propri\xe9t\xe9 de l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," Dans le tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),", ajoutez deux \xe9l\xe9ments de tableau qui sont tous deux de type objet.\nLe premier objet doit contenir une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"name")," avec une valeur ",Object(r.mdx)("inlineCode",{parentName:"p"},"'AeroJet'")," et une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"fuelCapacity")," avec une valeur de ",Object(r.mdx)("inlineCode",{parentName:"p"},"800"),".\nLe deuxi\xe8me objet doit avoir une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"name")," avec une valeur de ",Object(r.mdx)("inlineCode",{parentName:"p"},"'SkyJet'")," et une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"fuelCapacity")," avec une valeur de ",Object(r.mdx)("inlineCode",{parentName:"p"},"500"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4.")," Utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default")," pour exporter ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane module"),".\nBon travail ! Nous avons ajout\xe9 une propri\xe9t\xe9 qui r\xe9pertorie ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes")," dans le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// airplane.js\nlet Airplane = {\n  availableAirplanes: [\n    {\n      name: 'AeroJet',\n      fuelCapacity: 800\n    },\n    {\n      name: 'SkyJet',\n      fuelCapacity: 500\n    }\n  ]\n};\nexport default Airplane;\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"06-import"},"06. import"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/import"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"La syntaxe du module ES6 introduit \xe9galement le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," pour l'importation d'objets. Dans notre exemple ",Object(r.mdx)("strong",{parentName:"p"},"order.js"),", nous importons un  objet comme celui-ci :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import Menu from './menu';\n")),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"import")," commence l'instruction."),Object(r.mdx)("li",{parentName:"ol"},"Le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu")," sp\xe9cifie ici le nom de la variable dans laquelle stocker l'exportation par d\xe9faut."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"from")," sp\xe9cifie o\xf9 charger le module."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"'./menu'")," est le nom du module \xe0 charger. Lorsqu'il s'agit de  fichiers locaux, il fait sp\xe9cifiquement r\xe9f\xe9rence au nom du fichier sans l'extension du fichier.")),Object(r.mdx)("p",null,"Nous pouvons ensuite continuer \xe0 utiliser le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Menu")," dans le fichier ",Object(r.mdx)("strong",{parentName:"p"},"order.js"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Dans ",Object(r.mdx)("strong",{parentName:"p"},"missionControl.js"),", nous utiliserons le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane")," pour afficher la capacit\xe9 en carburant de nos deux avions.\nUtilisez le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," pour importer le module ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," D\xe9finissez une fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayFuelCapacity()"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," Dans le corps de la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayFuelCapacity"),", utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"forEach()")," pour parcourir le tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane.availableAirplanes"),".\nLe ",Object(r.mdx)("inlineCode",{parentName:"p"},"forEach()")," doit prendre une fonction anonyme comme param\xe8tre. Nous en ajouterons d'autres \xe0 l'\xe9tape suivante."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4.")," Passez \xe0 la fonction anonyme que vous avez cr\xe9\xe9e \xe0 la derni\xe8re \xe9tape un param\xe8tre de ",Object(r.mdx)("inlineCode",{parentName:"p"},"element"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"5.")," Dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayFuelCapacity"),", utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"console.log()")," pour afficher  le nom de l'\xe9l\xe9ment et sa capacit\xe9 en carburant. La sortie devrait  ressembler \xe0 ceci :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"'Fuel Capacity of + (element name) : + (element fuelCapacity)'\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"6.")," Appelez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayFuelCapacity"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// missionControl.js\nimport Airplane from './airplane';\nfunction displayFuelCapacity() {\n  Airplane.availableAirplanes.forEach((element) => {\n    console.log('Fuel Capacity of ' + element.name + ' : ' + element.fuelCapacity)\n  });\n};\ndisplayFuelCapacity();\n// Fuel Capacity of AeroJet : 800\n// Fuel Capacity of SkyJet : 500\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"07-exportations-nomm\xe9es"},"07. Exportations nomm\xe9es"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/named-exports"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"ES6 a introduit une deuxi\xe8me approche commune des modules d'exportation. En plus de ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default"),", les ",Object(r.mdx)("em",{parentName:"p"},"exportations nomm\xe9es")," nous  permettent d'exporter des donn\xe9es via l'utilisation de variables.\nVoyons comment cela fonctionne. Dans ",Object(r.mdx)("strong",{parentName:"p"},"menu.js"),", nous serions s\xfbrs de donner \xe0  chaque \xe9l\xe9ment de donn\xe9es un nom de variable distinct :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let specialty = '';\nfunction isVegetarian() {\n}; \nfunction isLowSodium() {\n}; \n\nexport { specialty, isVegetarian };\n")),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Notez que, lorsque nous utilisons des exportations nomm\xe9es, nous ne  d\xe9finissons pas les propri\xe9t\xe9s d'un objet. Chaque exportation est  stock\xe9e dans sa propre variable."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"specialty")," est un objet string,  tandis que ",Object(r.mdx)("inlineCode",{parentName:"li"},"isVegetarian")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"isLowSodium")," sont des objets sous forme de  fonctions. Rappelez-vous qu'en JavaScript, chaque fonction est en fait  un objet fonction."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"export { specialty, isVegetarian };")," exporte les objets par leurs noms de variables. Notez que le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"export")," est le pr\xe9fixe."),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("inlineCode",{parentName:"li"},"specialty")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"isVegetarian")," sont export\xe9s, tandis  que ",Object(r.mdx)("inlineCode",{parentName:"li"},"isLowSodium")," ne l'est pas, car il n'est pas sp\xe9cifi\xe9 dans la syntaxe  d'exportation.")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let Airplane = {\n  availableAirplanes: [\n    {\n      name: 'AeroJet',\n      fuelCapacity: 800\n    },\n    {\n      name: 'SkyJet',\n      fuelCapacity: 500\n    }\n  ]\n};\nexport default Airplane;\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Supprimez l'instruction qui d\xe9finit ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane")," comme un objet vide et supprimez toute la ligne ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default"),".\nVous verrez une erreur dans la console, mais nous corrigerons ce probl\xe8me \xe0 l'\xe9tape suivante."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Modifiez le tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes")," de sorte qu'il soit une variable d\xe9finie avec ",Object(r.mdx)("inlineCode",{parentName:"p"},"let")," et non plus une propri\xe9t\xe9 sur l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," Ajoutons quelques donn\xe9es suppl\xe9mentaires au tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),".\nDans le premier objet, ",Object(r.mdx)("inlineCode",{parentName:"p"},"AeroJet"),", ajoutez une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableStaff")," et  d\xe9finissez-la \xe9gale \xe0 un tableau avec les \xe9l\xe9ments ",Object(r.mdx)("inlineCode",{parentName:"p"},"'pilots'"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"'flightAttendants'"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"'engineers'"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"'medicalAssistance'")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"'sensorOperators'"),".\nDans le deuxi\xe8me objet, ",Object(r.mdx)("inlineCode",{parentName:"p"},"SkyJet"),", ajoutez une  propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableStaff")," et d\xe9finissez-la \xe9gale \xe0 un tableau avec les  \xe9l\xe9ments ",Object(r.mdx)("inlineCode",{parentName:"p"},"'pilots'")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"'flightAttendants'"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4.")," D\xe9finissez une nouvelle variable avec ",Object(r.mdx)("inlineCode",{parentName:"p"},"let")," nomm\xe9e ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements")," et d\xe9finissez-la \xe9gale \xe0 un objet vide."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"5.")," Dans l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements"),", ajoutez une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"requiredStaff")," et d\xe9finissez-la sur ",Object(r.mdx)("inlineCode",{parentName:"p"},"4"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"6.")," D\xe9finissez une fonction avec le nom ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements()")," qui prend ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableStaff")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"requiredStaff")," comme param\xe8tres."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"7.")," Dans le corps de la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements()"),", \xe9crivez une logique  pour v\xe9rifier si la longueur du tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableStaff")," est sup\xe9rieure ou \xe9gale \xe0 ",Object(r.mdx)("inlineCode",{parentName:"p"},"requiredStaff"),".\nLa fonction doit contenir cette logique :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"if length of availableStaff is greater than or equal to requiredStaff\n  return true\nelse \n  return false\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"8.")," \xc0 l'aide du mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"export"),", exportez les variables ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let Airplane = {};\nlet availableAirplanes = [\n  {\n    name: 'AeroJet',\n    fuelCapacity: 800,\n    availableStaff: [\n      'pilots',\n      'flightAttendants',\n      'engineers',\n      'medicalAssistance',\n      'sensorOperators'\n    ]\n  }, \n  {\n    name: 'SkyJet',\n    fuelCapacity: 500,\n    availableStaff: [\n      'pilots',\n      'flightAttendants'\n    ]\n  }\n];\nlet flightRequirements = {\n  requiredStaff: 4\n};\nfunction meetsStaffRequirements(availableStaff, requiredStaff) {\n  if (availableStaff.length >= requiredStaff) {\n    return true\n  } else {\n    return false\n  }\n};\nexport { availableAirplanes, flightRequirements, meetsStaffRequirements };\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"08-importations-nomm\xe9es"},"08. Importations nomm\xe9es"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/named-imports"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Pour importer des objets stock\xe9s dans une variable, nous utilisons le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," et incluons les variables dans un ensemble de ",Object(r.mdx)("inlineCode",{parentName:"p"},"{}"),".\nDans le fichier ",Object(r.mdx)("strong",{parentName:"p"},"order.js"),", par exemple, nous \xe9cririons :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { specialty, isVegetarian } from './menu';\n\nconsole.log(specialty);\n")),Object(r.mdx)("p",null,"Ici ",Object(r.mdx)("inlineCode",{parentName:"p"},"specialty")," and ",Object(r.mdx)("inlineCode",{parentName:"p"},"isVegetarian")," sont import\xe9s.\nSi nous ne voulions importer aucune de ces variables, nous pourrions les omettre de l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"import"),".\nNous pouvons ensuite utiliser ces objets comme dans notre code. Par  exemple, nous utiliserions ",Object(r.mdx)("inlineCode",{parentName:"p"},"specialty")," au lieu de ",Object(r.mdx)("inlineCode",{parentName:"p"},"Menu.specialty"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// missionControl.js\nimport Airplane from './airplane';\n\nfunction displayFuelCapacity() {\n  Airplane.availableAirplanes.forEach(function(element) {\n    console.log('Fuel Capacity of ' + element.name + ': ' + element.fuelCapacity);\n  });\n}\n\ndisplayFuelCapacity();\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Supprimons toute r\xe9f\xe9rence \xe0 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane")," dans notre code car nous n'exportons plus ce module.\nPar exemple, ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane.availableAirplanes")," devrait \xeatre modifi\xe9 en ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),".\nEncore une fois, vous verrez une ",Object(r.mdx)("inlineCode",{parentName:"p"},"ReferenceError")," dans la console pour le  moment, mais nous corrigerons cela dans notre prochaine \xe9tape."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Modifiez l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," afin qu'elle importe les variables  ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements"),".\nMaintenant, modifiez n'importe quelle instance de la variable ",Object(r.mdx)("inlineCode",{parentName:"p"},"Airplane.availableAirplanes"),", afin de n'utiliser que ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," D\xe9finissez une fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayStaffStatus()"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4.")," Dans le corps de la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayStaffStatus()"),", utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"forEach")," pour parcourir le tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),".\nPlus pr\xe9cis\xe9ment, ",Object(r.mdx)("inlineCode",{parentName:"p"},"forEach()")," doit prendre une fonction comme param\xe8tre. La  fonction doit \xe0 son tour prendre ",Object(r.mdx)("inlineCode",{parentName:"p"},"element")," comme param\xe8tre."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"5.")," Dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayStaffStatus()"),", utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"console.log()")," pour  afficher le nom de l'\xe9l\xe9ment. Nous en ajouterons d'autres \xe0 l'\xe9tape  suivante."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"6.")," En continuant dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayStaffStatus()"),", modifiez l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"console.log()")," en sortie"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"(element name) + ' meets staff requirements: ' + (true/false)\n")),Object(r.mdx)("p",null,"Pour ce faire, nous pouvons appeler la m\xe9thode ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements"),", en  passant deux param\xe8tres ",Object(r.mdx)("inlineCode",{parentName:"p"},"element.availableStaff")," et  ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements.requiredStaff"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"7.")," Appelez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displayStaffStatus()"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// missionControl.js\nimport { availableAirplanes, flightRequirements, meetsStaffRequirements } from './airplane';\n\nfunction displayFuelCapacity() {\n  availableAirplanes.forEach(function(element) {\n    console.log('Fuel Capacity of ' + element.name + ': ' + element.fuelCapacity);\n  });\n}\nfunction displayStaffStatus() {\n  availableAirplanes.forEach(function(element) {\n    console.log(element.name + ' meets staff requirements: ' + meetsStaffRequirements(element.availableStaff, flightRequirements.requiredStaff));\n  });\n};\ndisplayFuelCapacity();\ndisplayStaffStatus();\n")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"Fuel Capacity of AeroJet: 800\nFuel Capacity of SkyJet: 500\nAeroJet meets staff requirements: true\nSkyJet meets staff requirements: false\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"09-exporter-les-exportations-nomm\xe9es"},"09. Exporter les exportations nomm\xe9es"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/export-named-exports"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Les exportations nomm\xe9es sont \xe9galement distinctes en ce qu'elles peuvent \xeatre export\xe9es d\xe8s qu'elles sont d\xe9clar\xe9es, en pla\xe7ant le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," devant les d\xe9clarations de variables.\nDans ",Object(r.mdx)("strong",{parentName:"p"},"menu.js")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"export let specialty = '';\nexport function isVegetarian() {\n}; \nfunction isLowSodium() {\n}; \n")),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"export")," nous permet d'exporter des objets lors de la  d\xe9claration, comme indiqu\xe9 dans ",Object(r.mdx)("inlineCode",{parentName:"li"},"export let specialty")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"export function isVegetarian() {}"),"."),Object(r.mdx)("li",{parentName:"ol"},"Nous n'avons plus besoin d'une instruction ",Object(r.mdx)("inlineCode",{parentName:"li"},"export")," au bas de notre fichier, car ce comportement est trait\xe9 ci-dessus.")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Ajoutons quelques donn\xe9es suppl\xe9mentaires \xe0 notre fichier ",Object(r.mdx)("strong",{parentName:"p"},"plane.js"),".\nContinuez en ajoutant plus de donn\xe9es aux objets dans la variable ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),".\nAu premier objet AeroJet, ajoutez une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"maxSpeed")," avec une valeur de ",Object(r.mdx)("inlineCode",{parentName:"p"},"1200")," et une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"minSpeed")," avec une valeur de ",Object(r.mdx)("inlineCode",{parentName:"p"},"300"),".\nAu  deuxi\xe8me objet SkyJet, ajoutez une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"maxSpeed")," avec une valeur  de ",Object(r.mdx)("inlineCode",{parentName:"p"},"800")," et une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"minSpeed")," avec une valeur de ",Object(r.mdx)("inlineCode",{parentName:"p"},"200"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Dans l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements"),", ajoutez une propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"requiredSpeedRange")," et d\xe9finissez-la sur ",Object(r.mdx)("inlineCode",{parentName:"p"},"700"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," En continuant avec le m\xeame fichier, ajoutez une nouvelle fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements()")," qui prend trois arguments ",Object(r.mdx)("inlineCode",{parentName:"p"},"maxSpeed"),",  ",Object(r.mdx)("inlineCode",{parentName:"p"},"minSpeed")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"requiredSpeedRange"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4.")," Dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements"),", cr\xe9ez une variables ",Object(r.mdx)("inlineCode",{parentName:"p"},"range")," et d\xe9finissez-la sur la diff\xe9rence entre ",Object(r.mdx)("inlineCode",{parentName:"p"},"maxSpeed")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"minSpeed"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"5.")," Dans le corps de la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements()"),", cr\xe9ez une  logique pour v\xe9rifier si la ",Object(r.mdx)("inlineCode",{parentName:"p"},"range")," est sup\xe9rieure \xe0 la valeur ",Object(r.mdx)("inlineCode",{parentName:"p"},"requiredSpeedRange"),".\nLa fonction doit contenir cette logique :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"if the `range` is greater than the `requiredSpeedRange`\n  return true\nelse \n  return false \n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"6.")," Utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," pour exporter les variables d\xe8s qu'elles sont d\xe9clar\xe9es et  supprimez l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," au bas du fichier."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"export let availableAirplanes = [\n  {\n    name: 'AeroJet',\n    fuelCapacity: 800,\n    availableStaff: [\n      'pilots',\n      'flightAttendants',\n      'engineers',\n      'medicalAssistance',\n      'sensorOperators'\n    ],\n    maxSpeed: 1200,\n    minSpeed: 300\n  }, \n  {\n    name: 'SkyJet',\n    fuelCapacity: 500,\n    availableStaff: [\n      'pilots',\n      'flightAttendants'\n    ],\n    maxSpeed: 800,\n    minSpeed: 200\n  }\n];\nexport let flightRequirements = {\n  requiredStaff: 4,\n  requiredSpeedRange: 700\n};\nexport function meetsStaffRequirements(availableStaff, requiredStaff) {\n  if (availableStaff.length >= requiredStaff) {\n    return true\n  } else {\n    return false\n  }\n};\nexport function meetsSpeedRangeRequirements(maxSpeed, minSpeed, requiredSpeedRange) {\n  let range = maxSpeed - minSpeed;\n  if (range > requiredSpeedRange) {\n    return true\n  } else {\n    return false\n  };\n};\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"10-importer-des-importations-nomm\xe9es"},"10. Importer des importations nomm\xe9es"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/import-named-imports"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Pour importer des variables d\xe9clar\xe9es, nous utilisons simplement la syntaxe d'origine qui d\xe9crit le nom de la variable. En d'autres termes,  l'exportation apr\xe8s d\xe9claration n'a pas d'impact sur la fa\xe7on dont nous  importons les variables."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { specialty, isVegetarian } from 'menu';\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Ajoutez ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements")," \xe0 l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," en haut du fichier."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," D\xe9finissez une fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displaySpeedRangeStatus()"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"3.")," Dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displaySpeedRangeStatus()"),", utilisez la m\xe9thode ",Object(r.mdx)("inlineCode",{parentName:"p"},"forEach"),"  pour parcourir chaque \xe9l\xe9ment du tableau ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),".\nEncore une fois, ",Object(r.mdx)("inlineCode",{parentName:"p"},"forEach()")," devrait prendre une fonction comme param\xe8tre ; cette fonction doit prendre ",Object(r.mdx)("inlineCode",{parentName:"p"},"element")," comme param\xe8tre."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"4.")," Dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displaySpeedRangeStatus()"),", utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"console.log()")," pour afficher le nom de l'\xe9l\xe9ment."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"5.")," En continuant dans la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displaySpeedRangeStatus()"),", modifiez  l'instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"console.log()")," pour afficher une instruction comme celle-ci :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"(element name) + 'meets speed range requirements: ' + (true/false)\n")),Object(r.mdx)("p",null,"Pour ce faire, nous pouvons appeler la m\xe9thode ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements"),", en passant trois param\xe8tres ",Object(r.mdx)("inlineCode",{parentName:"p"},"element.maxSpeed"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"element.minSpeed")," et  ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements.requiredSpeedRange"),"."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"6.")," Appelez la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"displaySpeedRangeStatus()"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { availableAirplanes, flightRequirements, meetsStaffRequirements, meetsSpeedRangeRequirements } from './airplane';\n\nfunction displayFuelCapacity() {\n  availableAirplanes.forEach(function(element) {\n    console.log('Fuel Capacity of ' + element.name + ': ' + element.fuelCapacity);\n  });\n}\nfunction displayStaffStatus() {\n  availableAirplanes.forEach(function(element) {\n    console.log(element.name + ' meets staff requirements: ' + meetsStaffRequirements(element.availableStaff, flightRequirements.requiredStaff));\n  });\n};\nfunction displaySpeedRangeStatus() {\n  availableAirplanes.forEach(function(element) {\n    console.log(element.name+ 'meets speed range requirements: ' + meetsSpeedRangeRequirements(element.maxSpeed, element.minSpeed, flightRequirements.requiredSpeedRange));\n  });\n};\ndisplayFuelCapacity();\ndisplayStaffStatus();\ndisplaySpeedRangeStatus();\n")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"Fuel Capacity of AeroJet: 800\nFuel Capacity of SkyJet: 500\nAeroJet meets staff requirements: true\nSkyJet meets staff requirements: false\nAeroJetmeets speed range requirements: true\nSkyJetmeets speed range requirements: false\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"11-exporter-sous"},"11. Exporter sous"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/export-as"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Les exportations nomm\xe9es offrent \xe9galement un moyen pratique de modifier le nom des variables lorsque nous les exportons ou les importons. Nous  pouvons le faire avec le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"as"),".\nVoyons comment cela fonctionne. Dans notre exemple ",Object(r.mdx)("strong",{parentName:"p"},"menu.js")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let specialty = '';\nlet isVegetarian = function() {\n}; \nlet isLowSodium = function() {\n}; \n\nexport { specialty as chefsSpecial, isVegetarian as isVeg, isLowSodium };\n")),Object(r.mdx)("p",null,"Dans l'exemple ci-dessus, jetez un \u0153il \xe0 l'instruction d'exportation au bas du fichier."),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"as")," nous permet de donner un nom de variable un alias comme d\xe9montr\xe9 dans la sp\xe9cialit\xe9 comme ",Object(r.mdx)("inlineCode",{parentName:"li"},"chefsSpecial")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"isVegetarian"),"  comme ",Object(r.mdx)("inlineCode",{parentName:"li"},"isVeg"),"."),Object(r.mdx)("li",{parentName:"ol"},"Comme nous n'avons pas donn\xe9 d'alias \xe0 ",Object(r.mdx)("inlineCode",{parentName:"li"},"isLowSodium"),", il conservera son nom d'origine.")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Supprimez le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," devant chaque nom de variable, car nous n'en aurons plus besoin."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Ajoutez une instruction ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," pour exporter l'objet ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),"  en tant que",Object(r.mdx)("inlineCode",{parentName:"p"},"aircrafts"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements")," en tant que ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightReqs"),", la m\xe9thode ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements")," en tant que ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffReqs")," et  ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements")," en tant que ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeReqs"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let availableAirplanes = [\n  {\n    name: 'AeroJet',\n    fuelCapacity: 800,\n    availableStaff: [\n      'pilots',\n      'flightAttendants',\n      'engineers',\n      'medicalAssistance',\n      'sensorOperators'\n    ],\n    maxSpeed: 1200,\n    minSpeed: 300\n  }, \n  {\n    name: 'SkyJet',\n    fuelCapacity: 500,\n    availableStaff: [\n      'pilots',\n      'flightAttendants'\n    ],\n    maxSpeed: 800,\n    minSpeed: 200\n  }\n];\nlet flightRequirements = {\n  requiredStaff: 4,\n  requiredSpeedRange: 700\n};\nfunction meetsStaffRequirements(availableStaff, requiredStaff) {\n  if (availableStaff.length >= requiredStaff) {\n    return true\n  } else {\n    return false\n  }\n};\nfunction meetsSpeedRangeRequirements(maxSpeed, minSpeed, requiredSpeedRange) {\n  let range = maxSpeed - minSpeed;\n  if (range > requiredSpeedRange) {\n    return true\n  } else {\n    return false\n  };\n};\nexport { availableAirplanes as aircrafts, flightRequirements as flightReqs, meetsStaffRequirements as meetsStaffReqs, meetsSpeedRangeRequirements as meetsSpeedRangeReqs };\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"12-importer-sous"},"12. Importer sous"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/import-as"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Pour importer des alias d'exportation nomm\xe9s avec le mot cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"as"),", nous ajoutons la variable alias\xe9e dans notre instruction d'importation."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { chefsSpecial, isVeg } from './menu';\n")),Object(r.mdx)("p",null,"Dans ",Object(r.mdx)("strong",{parentName:"p"},"orders.js")),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Nous importons ",Object(r.mdx)("inlineCode",{parentName:"li"},"chefsSpecial")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"isVeg")," \xe0 partir de l'objet ",Object(r.mdx)("inlineCode",{parentName:"li"},"Menu"),"."),Object(r.mdx)("li",{parentName:"ol"},"Ici, notez que nous avons une option pour aliaser un objet qui  n'\xe9tait pas pr\xe9c\xe9demment alias\xe9 lors de l'exportation. Par exemple,  l'objet ",Object(r.mdx)("inlineCode",{parentName:"li"},"isLowSodium")," que nous avons export\xe9 pourrait avoir un alias avec le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"as")," lors de l'importation : ",Object(r.mdx)("inlineCode",{parentName:"li"},"import {isLowSodium as saltFree} from 'Menu';"))),Object(r.mdx)("p",null,"Une autre fa\xe7on d'utiliser les alias est d'importer le module entier en tant qu'alias :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import * as Carte from './menu';\n\nCarte.chefsSpecial;\nCarte.isVeg();\nCarte.isLowSodium(); \n")),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},"Cela nous permet d'importer un module entier depuis ",Object(r.mdx)("strong",{parentName:"li"},"menu.js")," en tant qu'alias ",Object(r.mdx)("inlineCode",{parentName:"li"},"Carte"),"."),Object(r.mdx)("li",{parentName:"ol"},"Dans cet exemple, le nom que nous avons export\xe9 nous serait  disponible en tant que propri\xe9t\xe9s de ce module. Par exemple, si nous  exportions les alias ",Object(r.mdx)("inlineCode",{parentName:"li"},"chefsSpecial")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"isVeg"),", ceux-ci seraient disponibles pour nous. Si nous ne donnions pas d'alias \xe0 ",Object(r.mdx)("inlineCode",{parentName:"li"},"isLowSodium"),", nous  l'appellerions comme d\xe9fini sur le module ",Object(r.mdx)("inlineCode",{parentName:"li"},"Carte"),".")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Dans le corps de ",Object(r.mdx)("strong",{parentName:"p"},"missionControl.js"),", remplacez chaque variable par son alias, \xe0 l'exception de la variable dans l'instruction d'importation.\nDans le corps, changez :"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"availableAirplanes")," en ",Object(r.mdx)("inlineCode",{parentName:"li"},"aircrafts")," "),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"flightRequirements")," en ",Object(r.mdx)("inlineCode",{parentName:"li"},"flightReqs")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"meetsStaffRequirements")," en ",Object(r.mdx)("inlineCode",{parentName:"li"},"meetsStaffReqs")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"meetsSpeedRangeRequirements")," en ",Object(r.mdx)("inlineCode",{parentName:"li"},"meetsSpeedRangeReqs"))),Object(r.mdx)("p",null,"Vous verrez une erreur dans la console, mais nous la corrigerons dans le prochain exercice."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Modifiez maintenant l'instruction d'importation pour importer ",Object(r.mdx)("inlineCode",{parentName:"p"},"aircrafts"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightReqs"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffReqs"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeReqs"),". "),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { aircrafts, flightReqs, meetsStaffReqs, meetsSpeedRangeReqs } from './airplane';\n\nfunction displayFuelCapacity() {\n  aircrafts.forEach(function(element) {\n    console.log('Fuel Capacity of ' + element.name + ': ' + element.fuelCapacity);\n  });\n}\nfunction displayStaffStatus() {\n  aircrafts.forEach(function(element) {\n    console.log(element.name + ' meets staff requirements: ' + meetsStaffReqs(element.availableStaff, flightReqs.requiredStaff));\n  });\n};\nfunction displaySpeedRangeStatus() {\n  aircrafts.forEach(function(element) {\n    console.log(element.name+ 'meets speed range requirements: ' + meetsSpeedRangeReqs(element.maxSpeed, element.minSpeed, flightReqs.requiredSpeedRange));\n  });\n};\ndisplayFuelCapacity();\ndisplayStaffStatus();\ndisplaySpeedRangeStatus();\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"13-combinaison-dinstructions-dexportation"},"13. Combinaison d'instructions d'exportation"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/combining-export-statements"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Nous pouvons \xe9galement utiliser les exportations nomm\xe9es et les exportations par d\xe9faut ensemble. Dans ",Object(r.mdx)("strong",{parentName:"p"},"menu.js")," :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let specialty = '';\nfunction isVegetarian() {\n}; \nfunction isLowSodium() {\n}; \nfunction isGlutenFree() {\n};\n\nexport { specialty as chefsSpecial, isVegetarian as isVeg };\nexport default isGlutenFree;\n")),Object(r.mdx)("p",null,"Ici, nous utilisons le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," pour exporter les exportations nomm\xe9es en bas du fichier. Pendant ce temps, nous exportons la variable ",Object(r.mdx)("inlineCode",{parentName:"p"},"isGlutenFree")," en utilisant la syntaxe ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default"),".\nCela fonctionnerait \xe9galement si nous exportions la plupart des variables telles que d\xe9clar\xe9es et en exportions d'autres avec la syntaxe  ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"export let Menu = {};\n\nexport let specialty = '';\nexport let isVegetarian = function() {\n}; \nexport let isLowSodium = function() {\n}; \nlet isGlutenFree = function() {\n};\n\nexport default isGlutenFree;\n")),Object(r.mdx)("p",null,"Ici, nous utilisons le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," pour exporter les variables lors  de la d\xe9claration, puis \xe0 nouveau exporter la variable ",Object(r.mdx)("inlineCode",{parentName:"p"},"isGlutenFree")," en  utilisant la syntaxe ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default"),".\nS'il est pr\xe9f\xe9rable d'\xe9viter de combiner deux m\xe9thodes d'exportation, cela est parfois utile. Par exemple, si vous pensez que les d\xe9veloppeurs ne seront  int\xe9ress\xe9s que par l'importation d'une fonction sp\xe9cifique et n'auront  pas besoin d'importer l'int\xe9gralit\xe9 de l'exportation par d\xe9faut."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Dans ",Object(r.mdx)("strong",{parentName:"p"},"airplanes.js"),", utilisez le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"export")," pour exporter ",Object(r.mdx)("inlineCode",{parentName:"p"},"availableAirplanes"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"flightRequirements")," et ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsStaffRequirements")," d\xe8s qu'ils sont d\xe9clar\xe9s."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," Utilisez ",Object(r.mdx)("inlineCode",{parentName:"p"},"export default")," pour exporter ",Object(r.mdx)("inlineCode",{parentName:"p"},"meetsSpeedRangeRequirements"),". "),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"export let availableAirplanes = [\n  {\n    name: 'AeroJet',\n    fuelCapacity: 800,\n    availableStaff: [\n      'pilots',\n      'flightAttendants',\n      'engineers',\n      'medicalAssistance',\n      'sensorOperators'\n    ],\n    maxSpeed: 1200,\n    minSpeed: 300\n  }, \n  {\n    name: 'SkyJet',\n    fuelCapacity: 500,\n    availableStaff: [\n      'pilots',\n      'flightAttendants'\n    ],\n    maxSpeed: 800,\n    minSpeed: 200\n  }\n];\nexport let flightRequirements = {\n  requiredStaff: 4,\n  requiredSpeedRange: 700\n};\nexport function meetsStaffRequirements(availableStaff, requiredStaff) {\n  if (availableStaff.length >= requiredStaff) {\n    return true\n  } else {\n    return false\n  }\n};\nfunction meetsSpeedRangeRequirements(maxSpeed, minSpeed, requiredSpeedRange) {\n  let range = maxSpeed - minSpeed;\n  if (range > requiredSpeedRange) {\n    return true\n  } else {\n    return false\n  };\n};\nexport default meetsSpeedRangeRequirements;\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"14-combinaison-dinstructions-dimportation"},"14. Combinaison d'instructions d'importation"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/combining-import-statements"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Nous pouvons importer la collection d'objets et de fonctions avec les m\xeames donn\xe9es.\nNous pouvons utiliser un mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," pour importer les deux types de variables en tant que telles :"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { specialty, isVegetarian, isLowSodium } from './menu';\n\nimport GlutenFree from './menu';\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Instructions")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"1.")," Supprimez l'instruction d'importation en haut de ",Object(r.mdx)("strong",{parentName:"p"},"missionControl.js"),".\nUne fois que vous avez supprim\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import"),", remplacez chaque variable par son nom d'origine sans alias dans le reste du fichier."),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"aircrafts")," par ",Object(r.mdx)("inlineCode",{parentName:"li"},"availableAirplanes")," "),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"flightReqs")," par ",Object(r.mdx)("inlineCode",{parentName:"li"},"flightRequirements")," "),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"meetsStaffReqs")," par ",Object(r.mdx)("inlineCode",{parentName:"li"},"meetsStaffRequirements")," "),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"meetsSpeedRangeReqs")," par ",Object(r.mdx)("inlineCode",{parentName:"li"},"meetsSpeedRangeRequirements")," ")),Object(r.mdx)("p",null,"Si vous voyez des erreurs dans la console, ne vous inqui\xe9tez pas. Nous allons r\xe9soudre ce probl\xe8me lors de notre derni\xe8re \xe9tape !"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"2.")," En haut du fichier, nous allons maintenant importer toutes les variables du module."),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Utilisez ",Object(r.mdx)("inlineCode",{parentName:"li"},"import")," pour importer ",Object(r.mdx)("inlineCode",{parentName:"li"},"availableAirplanes"),", ",Object(r.mdx)("inlineCode",{parentName:"li"},"flightRequirements")," et ",Object(r.mdx)("inlineCode",{parentName:"li"},"meetsStaffRequirements")," entre un ensemble de ",Object(r.mdx)("inlineCode",{parentName:"li"},"{}")),Object(r.mdx)("li",{parentName:"ul"},"Utiliser ",Object(r.mdx)("inlineCode",{parentName:"li"},"import")," pour importer des ",Object(r.mdx)("inlineCode",{parentName:"li"},"meetsSpeedRangeRequirements"),".")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { availableAirplanes, flightRequirements, meetsStaffRequirements } from './airplane';\nimport meetsSpeedRangeRequirements from './airplane';\nfunction displayFuelCapacity() {\n  availableAirplanes.forEach(function(element) {\n    console.log('Fuel Capacity of ' + element.name + ': ' + element.fuelCapacity);\n  });\n}\nfunction displayStaffStatus() {\n  availableAirplanes.forEach(function(element) {\n    console.log(element.name + ' meets staff requirements: ' + meetsStaffRequirements(element.availableStaff, flightRequirements.requiredStaff));\n  });\n};\nfunction displaySpeedRangeStatus() {\n  availableAirplanes.forEach(function(element) {\n    console.log(element.name+ 'meets speed range requirements: ' + meetsSpeedRangeRequirements(element.maxSpeed, element.minSpeed, flightRequirements.requiredSpeedRange));\n  });\n};\ndisplayFuelCapacity();\ndisplayStaffStatus();\ndisplaySpeedRangeStatus();\n")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"15-revue"},"15. Revue"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/courses/introduction-to-javascript/lessons/modules/exercises/review"}),"Learn JavaScript | Codecademy")),Object(r.mdx)("p",null,"Nous venons d'apprendre \xe0 utiliser les modules JavaScript. Passons en revue ce que nous avons appris :"),Object(r.mdx)("p",null,Object(r.mdx)("em",{parentName:"p"},"Les modules")," de Node.js sont des morceaux de code r\xe9utilisables qui peuvent  \xeatre export\xe9s \xe0 partir d'un programme et import\xe9s pour \xeatre utilis\xe9s  dans un autre programme."),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"module.exports")," exporte le module pour une utilisation dans un autre programme."),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"require()")," importe le module \xe0 utiliser dans le programme en cours.")),Object(r.mdx)("p",null,"ES6 a introduit une syntaxe plus flexible et plus simple pour exporter les modules :"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"les exportations par d\xe9faut utilisent ",Object(r.mdx)("inlineCode",{parentName:"li"},"export default")," pour  exporter des objets JavaScript, des fonctions et des types de donn\xe9es  primitifs."),Object(r.mdx)("li",{parentName:"ul"},"les exportations nomm\xe9es utilisent le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"export")," pour exporter des donn\xe9es dans des variables."),Object(r.mdx)("li",{parentName:"ul"},"les exportations nomm\xe9es peuvent avoir un alias avec le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"li"},"as"),"."),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"import")," est un mot-cl\xe9 qui importe n'importe quel objet, fonction ou type de donn\xe9es.")),Object(r.mdx)("hr",null),Object(r.mdx)("h2",{id:"aide-m\xe9moire"},"Aide-m\xe9moire"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"https://www.codecademy.com/learn/introduction-to-javascript/modules/intermediate-javascript-modules/cheatsheet"}),"Learn JavaScript: Modules Cheatsheet | Codecademy")),Object(r.mdx)("h3",{id:"importez-des-modules-javascript-avec-la-fonction-require"},"Importez des modules Javascript avec la fonction ",Object(r.mdx)("inlineCode",{parentName:"h3"},"require")),Object(r.mdx)("p",null,"Dans Node.js, la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"require")," peut \xeatre utilis\xe9e pour importer du code d'un autre fichier dans le script courant."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'var moduleA = require( "./module-a.js" );\n\n// The .js extension is optional\nvar moduleA = require( "./module-a" );\n// Both ways will produce the same result.\n\n// Now the functionality of moduleA can be used\nconsole.log(moduleA.someFunctionality)\n')),Object(r.mdx)("h3",{id:"javascript-interm\xe9diaire--module-export"},"Javascript interm\xe9diaire : module ",Object(r.mdx)("inlineCode",{parentName:"h3"},"export")),Object(r.mdx)("p",null,"Pour rendre un objet de notre fichier Javascript exportable en tant que module dans Node.js, nous affectons l'objet \xe0 la propri\xe9t\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"exports")," du ",Object(r.mdx)("inlineCode",{parentName:"p"},"module"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'let Course = {};\nCourse.name = "Javascript Node.js"\nmodule.exports = Course;\n')),Object(r.mdx)("h3",{id:"export-default-javascript"},Object(r.mdx)("inlineCode",{parentName:"h3"},"export default")," Javascript"),Object(r.mdx)("p",null,"\xc0 partir de ES6, les mots-cl\xe9s ",Object(r.mdx)("em",{parentName:"p"},"export default")," permettent  d'exporter une seule variable ou fonction, puis, dans un autre script,  il sera simple d'importer l'exportation par d\xe9faut."),Object(r.mdx)("p",null,"Apr\xe8s avoir utilis\xe9 ",Object(r.mdx)("em",{parentName:"p"},"export default"),", il est possible d'importer  une variable ou une fonction sans utiliser la fonction ",Object(r.mdx)("inlineCode",{parentName:"p"},"require()"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// module \"moduleA.js\"\nexport default function cube(x) {\n  return x * x * x;\n}\n\n// In main.js\nimport cube from './moduleA.js';\n// Now the `cube` function can be used straightforwardly.\nconsole.log(cube(3)); // 27\n")),Object(r.mdx)("h3",{id:"utilisation-du-mot-cl\xe9-import-en-javascript"},"Utilisation du mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"h3"},"import")," en Javascript"),Object(r.mdx)("p",null,"Depuis ES6, le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import")," peut \xeatre utilis\xe9 pour importer des fonctions,  des objets ou des primitives pr\xe9c\xe9demment export\xe9s dans le script  courant."),Object(r.mdx)("p",null,"Il existe de nombreuses fa\xe7ons d'utiliser le mot-cl\xe9 ",Object(r.mdx)("inlineCode",{parentName:"p"},"import"),", par exemple, vous pouvez importer toutes les exportations d'un script en utilisant le s\xe9lecteur ",Object(r.mdx)("inlineCode",{parentName:"p"},"*")," comme suit : ",Object(r.mdx)("inlineCode",{parentName:"p"},"import * from 'module_name';"),"."),Object(r.mdx)("p",null,"Une seule fonction peut \xeatre import\xe9e avec des accolades comme suit : ",Object(r.mdx)("inlineCode",{parentName:"p"},"import {funcA} as name from 'module_name';"),"."),Object(r.mdx)("p",null,"Ou de nombreuses fonctions par nom : ",Object(r.mdx)("inlineCode",{parentName:"p"},"import {funcA, funcB} as name from 'module_name';")," ."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// add.js\nexport const add = (x, y) => {\n    return x + y\n}\n\n// main.js\nimport { add } from './add';\nconsole.log(add(2, 3)); // 5\n")))}d.isMDXComponent=!0},214:function(e,n,t){"use strict";t.r(n),t.d(n,"MDXContext",(function(){return d})),t.d(n,"MDXProvider",(function(){return u})),t.d(n,"mdx",(function(){return j})),t.d(n,"useMDXComponents",(function(){return c})),t.d(n,"withMDXComponents",(function(){return s}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(){return(l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=i.a.createContext({}),s=function(e){return function(n){var t=c(n.components);return i.a.createElement(e,l({},n,{components:t}))}},c=function(e){var n=i.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},u=function(e){var n=c(e.components);return i.a.createElement(d.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},x=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),d=c(t),s=a,u=d["".concat(l,".").concat(s)]||d[s]||b[s]||r;return t?i.a.createElement(u,m(m({ref:n},o),{},{components:t})):i.a.createElement(u,m({ref:n},o))}));function j(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=x;var o={};for(var m in n)hasOwnProperty.call(n,m)&&(o[m]=n[m]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=t[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}x.displayName="MDXCreateElement"}}]);